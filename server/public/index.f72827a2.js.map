{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-95e1be60b59cf72b.js","src/js/config.js","src/js/helpers.js","src/js/model.js","node_modules/@parcel/runtime-js/lib/runtime-b3a182e534969213.js","src/js/views/View.js","src/js/views/cardsHoverModalView.js","src/js/views/gridCardsGalleryView.js","src/js/views/horizontalMasonryGalleryView.js","src/js/views/bookmarksView.js","src/js/views/galleryView.js","src/js/views/searchView.js","src/js/views/resultsView.js","src/js/views/paginationView.js","src/js/views/asideModalView.js","src/js/views/controlPanelView.js","src/js/views/settingsModalView.js","src/js/views/filtersView.js","src/js/views/modalPopupView.js","src/js/views/artistStatementView.js","src/js/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"f9fpV\\\":\\\"index.f72827a2.js\\\",\\\"kKpk2\\\":\\\"icons.74cbca72.svg\\\"}\"));","// export const API_URL = 'http://127.0.0.1:8000/api/v1/';\nexport const API_URL =\n  'https://artist-portfolio-workbook-2.herokuapp.com/api/v1/';\nexport const URL_PATH_1 = 'gallery/';\nexport const URL_PATH_2 = 'texts/';\nexport const TIMEOUT_SEC = 12;\nexport const RES_PER_PAGE = 20;\nexport const GALLERY_MODES = ['horizontal-masonry', 'grid-cards', 'bookmarks'];\n\n// export const GALLERY_MODES = [{ DEFAULT: 'horizontal-masonry' }, 'grid-cards'];\n// export const CLOUDINARY_CLOUD_NAME = var cl = new cloudinary.Cloudinary({cloud_name: \"dpztejrq6\", secure: true});\n","import { TIMEOUT_SEC } from './config';\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} seconds`));\n    }, s * 1000);\n  });\n};\n\nexport const getJSON = async function (url) {\n  try {\n    const res = await Promise.race([fetch(url), timeout(TIMEOUT_SEC)]);\n    const data = await res.json();\n\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n","import { API_URL, RES_PER_PAGE, URL_PATH_1, URL_PATH_2 } from './config.js';\nimport { getJSON } from './helpers.js';\n\nexport const state = {\n  artworks: [],\n  artwork: {},\n  search: {\n    query: '',\n    results: [],\n    page: 1,\n    resultsPerPage: RES_PER_PAGE,\n    filterFields: [],\n  },\n  bookmarks: [],\n  galleryMode: [],\n  theme: '',\n  texts: [],\n};\n\nexport const loadArtworks = async function () {\n  try {\n    const data = await getJSON(API_URL + 'gallery/');\n\n    state.artworks = data.data.artworks.map((artwork) => {\n      return {\n        id: artwork.id,\n        image: artwork.imageCover,\n        title: artwork.title,\n        medium: artwork.medium,\n        date: artwork.date,\n        dims: artwork.dimensions,\n        height: artwork.dimensions.height,\n        width: artwork.dimensions.width,\n        price: artwork.sales.price,\n        priceRange: artwork.sales.priceRange,\n        categories: artwork.categories,\n        tags: artwork.tags,\n      };\n    });\n    console.log(state.artworks);\n  } catch (err) {\n    console.error(`${err} 💥💥💥`);\n    throw err;\n  }\n};\n\nexport const loadSearchResults = async function (query) {\n  try {\n    state.search.query = query;\n\n    const data = await getJSON(`${API_URL}gallery/${query}`);\n    console.log(data);\n\n    state.search.results = data.data.artworks.map((artwork) => {\n      return {\n        id: artwork.id,\n        image: artwork.imageCover,\n        title: artwork.title,\n        medium: artwork.medium,\n        date: artwork.date,\n        dims: artwork.dimensions,\n        height: artwork.dimensions.height,\n        width: artwork.dimensions.width,\n        price: artwork.sales.price,\n        priceRange: artwork.sales.priceRange,\n        categories: artwork.categories,\n        tags: artwork.tags,\n      };\n    });\n    // console.log(data);\n    // state.search.page = 1;\n  } catch (err) {\n    console.error(`${err} 💥💥💥`);\n    throw err;\n  }\n};\n\nexport const getSearchResultsPage = function (page = state.search.page) {\n  state.search.page = page;\n\n  const start = (page - 1) * state.search.resultsPerPage;\n  const end = page * state.search.resultsPerPage;\n\n  return state.search.results.slice(start, end);\n};\n\nexport const loadArtwork = async function (id) {\n  try {\n    const data = await getJSON(`${API_URL}gallery/artwork/${id}`);\n    // console.log(data);\n\n    const { artworks } = data.data;\n    state.artwork = {\n      id: artworks.id,\n      image: artworks.imageCover,\n      title: artworks.title,\n      medium: artworks.medium,\n      date: artworks.date,\n      dims: artworks.dimensions,\n      height: artworks.dimensions.height,\n      width: artworks.dimensions.width,\n      price: artworks.sales.price,\n      priceRange: artworks.sales.priceRange,\n      categories: artworks.categories,\n      tags: artworks.tags,\n      description: artworks.description,\n      location: artworks.location,\n    };\n\n    if (state.bookmarks.some((bookmark) => bookmark.id === id))\n      state.artwork.bookmarked = true;\n    else state.artwork.bookmarked = false;\n  } catch (err) {\n    console.error(`${err} 💥💥💥`);\n    throw err;\n  }\n};\n\nconst persistBookmarks = function () {\n  localStorage.setItem('bookmarks', JSON.stringify(state.bookmarks));\n};\n\nexport const addBookmark = function (artwork) {\n  // When adding get entire data\n  // Add bookmark\n  state.bookmarks.push(artwork);\n\n  // Mark current artwork as bookmark\n  if (\n    artwork.id === state.artwork.id ||\n    artwork.id === state.search.results.id\n  ) {\n    state.artwork.bookmarked = true;\n    state.search.results.bookmarked = true;\n  }\n  persistBookmarks();\n};\n\nexport const deleteBookmark = function (id) {\n  // Delete bookmark\n  // When deleting only get id\n  const index = state.bookmarks.findIndex((el) => el.id === id);\n  state.bookmarks.splice(index, 1);\n\n  // Mark current artwork as NOT bookmarked\n  if (id === state.artwork.id) state.artwork.bookmarked = false;\n  if (id === state.search.results.id) state.search.results.bookmarked = false;\n\n  persistBookmarks();\n};\n\n// export const restoreBookmarks = () => {\n//   const storage = localStorage.getItem('bookmarks');\n//   if (storage) state.bookmarks = JSON.parse(storage);\n// };\n// console.log(state.bookmarks);\n\nconst init = function () {\n  const storage = localStorage.getItem('bookmarks');\n  if (storage) state.bookmarks = JSON.parse(storage);\n};\ninit();\n// console.log(state.bookmarks);\n\nconst clearBookmarks = function () {\n  localStorage.clear('bookmarks');\n};\n// clearBookmarks();\n\nexport const loadFilterCategories = async function (...filters) {\n  try {\n    const data = await getJSON(`${API_URL}gallery/${filters}`);\n\n    state.search.filterFields = data.data.artworks.map((artwork) => {\n      return {\n        medium: artwork.medium[0],\n        date: artwork.date,\n        dimensions: artwork.dimensions,\n        price: artwork.sales.price,\n        priceRange: artwork.sales.priceRange,\n        categories: artwork.categories,\n        tags: artwork.tags,\n        location: artwork.location,\n      };\n    });\n  } catch (err) {\n    console.error(`${err} 💥💥💥`);\n    throw err;\n  }\n};\n\n///////////////////\n// GALLERY MODE\nconst setGalleryMode = function () {\n  localStorage.setItem('data-gallery-mode', state.galleryMode);\n};\n\nexport const updateGalleryMode = function (mode) {\n  state.galleryMode = mode;\n  setGalleryMode();\n};\n\nconst galleryModeInit = function () {\n  const storage = localStorage.getItem('data-gallery-mode');\n  if (storage) state.galleryMode = storage;\n};\ngalleryModeInit();\n\n///////////////////\n// LIGHT-DARK THEME\n// const updateTheme = function () {\n//   localStorage.setItem('data-theme', state.theme);\n// };\n\nexport const setTheme = function (theme) {\n  if (theme === 'dark') localStorage.setItem('data-theme', 'dark');\n  if (theme === null || theme === 'light')\n    localStorage.setItem('data-theme', 'light');\n  // state.theme = theme;\n\n  // updateTheme();\n};\n\nconst themeInit = function () {\n  const storage = localStorage.getItem('data-theme');\n  if (storage) state.theme = storage;\n};\nthemeInit();\n\nexport const loadTexts = async function () {\n  try {\n    const data = await getJSON(API_URL + URL_PATH_2);\n\n    state.texts = data.data.texts.map((text) => {\n      return {\n        id: text.id,\n        heading: text.heading,\n        subHeading: text.subHeading,\n        content: text.content,\n        dateWritten: text.dateWritten,\n        version: text.version,\n        categories: text.categories,\n        rating: text.rating,\n        artwork: text.artwork,\n        user: text.user,\n      };\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n//V.2\n// let theme = localStorage.getItem('data-theme');\n// if (theme ==='dark') {\n//   changeThemeToDark();\n// }\n\n// let theme = localStorage.getItem('data-theme');\n/*\nconst themeInit = function () {\n  const currentTheme = localStorage.getItem('data-theme');\n  if (currentTheme) {\n    state.theme = currentTheme;\n    console.log(state.theme);\n  }\n};\nthemeInit();\n\nexport const switchTheme = function () {};\n\n// }\n\n// function initTheme() {\n//   const =\n// }\n*/\n///////////////////\n// LIGHT-DARK THEME\n//V.1\n/*\n  const themeInit = function () {\n    const currentTheme = localStorage.getItem('data-theme');\n    \n    if (currentTheme) {\n      state.theme = currentTheme\n      console.log(state.theme)\n    }\n    \n  }\n themeInit();\n\nexport const switchTheme = function(e) {\n  if (e.target.checked) {\n    document.documentElement.setAttribute('data-theme', 'dark');\n    localStorage.setItem('data-theme', 'dark');\n    console.log('theme=dark');\n  } else {\n    document.documentElement.setAttribute('data-theme', 'light');\n    localStorage.setItem('data-theme', 'light');\n    console.log('theme=light');\n  }\n}\n  */\n\n//////////////////\n// export const toggleGalleryMode = function (galleryMode) {\n//   if (localStoredGalleryMode === DEFAULT_GALLERY_MODE) {\n//     state.galleryMode = DEFAULT_GALLERY_MODE\n//     // state.galleryMode = storedGalleryMode;\n//     setGalleryMode();\n//     console.log(state.galleryMode);\n//   } else if (state.galleryMode = GALLERY_MODE_2){\n//     // setHorizontalMasonryGallery();\n//     // console.log('horizontal-masonry-gallery');\n//     console.log(state.galleryMode);\n//   }\n// const themeModeStorage = localStorage.getItem('data-theme-mode');\n\n// if(themeModeStorage) state.themeMode = JSON.parse(themeModeStorage);\n//////\n// const storage = localStorage.getItem('data-gallery-mode');\n// if (storage) state.galleryMode = JSON.parse(storage);\n\n// SWITCH\n// switch(storedGalleryMode === DEFAULT_GALLERY_MODE)\n// TERNARY OPERATOR\n// localStoredGalleryMode === DEFAULT_GALLERY_MODE ? state.galleryMode = DEFAULT_GALLERY_MODE : GALLERY_MODE_2;\n// };\n\n// export const setGalleryMode = function () {\n// const gallerySection = document.getElementById('section-gallery');\n\n//   export const setGridCardsGallery = () => {\n//     gallerySection.setAttribute('data-gallery', 'grid-cards-gallery');\n//     localStorage.setItem('data-gallery', 'grid-cards-gallery');\n//   };\n\n//   export const setHorizontalMasonryGallery = () => {\n//     gallerySection.setAttribute('data-gallery', 'horizontal-masonry-gallery');\n//     localStorage.setItem('data-gallery', 'horizontal-masonry-gallery');\n//   };\n// // }\n\n// exports.getAll = (Model, view, viewMode) =>\n//   catchAsync(async (req, res, next) => {\n//     const category = req.categories;\n\n//     const apiFeatures = new APIFeatures(\n//       Model.find({ categories: category || { $exists: true } }),\n//       req.query\n//     )\n//       .filter()\n//       .sort()\n//       .limitFields()\n//       .paginate();\n//     const docs = await apiFeatures.query;\n\n// export const setGalleryMode = function(galleryMode) {\n//   gallerySection.setAttribute('data-gallery-mode', 'grid-cards');\n\n// }\n\n// const persistBookmarks = function () {\n//   localStorage.setItem('bookmarks', JSON.stringify(state.bookmarks));\n// };\n// Get local storage gallery mode once on window load?\n// export const localStoredGalleryMode = function() {\n//   localStorage.getItem('data-gallery-mode')\n// }\n// export const getGalleryMode = function() {\n//   localStorage.getItem('data-gallery-mode')\n// }\n\n// have to pass the data from the model to view via the controller. Render() accepts data, so does update(). Technically I am updating the DOM and I do not want to re-render the page so perhaps update is the method I should use to change the gallery mode. Or am I actually re-rendering the entire view. Yes.\n\n// const currentMode = localStorage.getItem('data-gallery-mode');\n\n// if (currentMode) {\n//   state.galleryMode = currentMode;\n// }\n\n// function switchMode() {\n//   if\n// }\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kKpk2\")).toString();","import icons from 'url:../../../public/icons/icons.svg';\n\nexport default class View {\n  _data;\n\n  /**\n   * Render the received object to the DOM\n   * @param {Object | Object[]} data The data to be rendered (e.g. artwork)\n   * @param {boolean} [render=true] If false, create markup string instead of rendering to the DOM\n   * @returns {undefined | string} A markup string is returned if render=false\n   * @this {Object} View instance\n   */\n  render(data, render = true) {\n    if (!data || (Array.isArray(data) && data.length === 0))\n      return this.renderError();\n\n    this._data = data;\n    const markup = this._generateMarkup();\n\n    if (!render) return markup;\n\n    this._clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  /**\n   * Update changed elements and render them in the DOM without re-rendering unchanged elements\n   * @param {Object | Object[]} data The data to be updated.\n   * @param {*} render\n   * @this {Object} View instance\n   * @returns {undefined | string} A markup string is returned if render=false\n   * @todo Finish implementation; not production-ready algorithm.\n   */\n  update(data, render = true) {\n    this._data = data;\n    const newMarkup = this._generateMarkup();\n\n    const newDOM = document.createRange().createContextualFragment(newMarkup);\n    const newElements = Array.from(newDOM.querySelectorAll('*'));\n    // console.log(newElements, 'newElements');\n    const curElements = Array.from(this._parentElement.querySelectorAll('*'));\n    console.log(curElements, 'curElements');\n\n    newElements.forEach((newEl, i) => {\n      const curEl = curElements[i];\n      // console.log(curEl, newEl.isEqualNode(curEl));\n\n      // Updates changed TEXT\n      if (\n        !newEl.isEqualNode(curEl) &&\n        newEl.firstChild?.nodeValue.trim() !== ''\n      ) {\n        // console.log('💥', newEl.firstChild?.nodeValue.trim() !== '');\n        curEl.textContent = newEl.textContent;\n      }\n\n      // Updates changed ATTRIBUTES\n      if (!newEl.isEqualNode(curEl))\n        Array.from(newEl.attributes).forEach((attr) =>\n          curEl.setAttribute(attr.name, attr.value)\n        );\n    });\n  }\n\n  _clear() {\n    this._parentElement.innerHTML = '';\n  }\n\n  renderSpinner() {\n    const markup = `\n      <div class=\"spinner\">\n        <svg>\n          <use href=\"${icons}#icon-loader\" crossorigin=\"anonymous\"></use>\n        </svg>\n      </div>\n    `;\n    this._clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  renderError(message = this._errorMessage) {\n    const markup = `\n      <div class=\"error\">\n        <div>\n          <svg>\n            <use href=\"${icons}#icon-alert-triangle\"></use>\n          </svg>\n        </div>\n        <p>${message}</p>\n      </div>\n    `;\n    this._clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  renderMessage(message = this._message) {\n    const markup = `\n      <div class=\"message\">\n        <div>\n          <svg>\n            <use href=\"${icons}#icon-smile\"></use>\n          </svg>\n        </div>\n        <p>${message}</p>\n      </div>\n    `;\n    this._clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n}\n\n// const toggleSwitch = document.querySelector(\n//   '.theme-switch input[type=\"checkbox\"]'\n// );\n// const currentTheme = localStorage.getItem('theme');\n\n// if (currentTheme) {\n//   document.documentElement.setAttribute('data-theme', currentTheme);\n\n//   if (currentTheme === 'dark') {\n//     toggleSwitch.checked = true;\n//   }\n// }\n\n// function switchTheme(e) {\n//   if (e.target.checked) {\n//     document.documentElement.setAttribute('data-theme', 'dark');\n//     localStorage.setItem('theme', 'dark');\n//     console.log('theme=dark');\n//   } else {\n//     document.documentElement.setAttribute('data-theme', 'light');\n//     localStorage.setItem('theme', 'light');\n//     console.log('theme=light');\n//   }\n// }\n\n// export const addHandlerToggleSwitch = async function () {\n//   toggleSwitch.addEventListener('change', switchTheme, false);\n// };\n","import View from './View.js';\n\nclass CardsHoverModalView extends View {\n  _parentElement = document.querySelector('.card');\n  _card = document.querySelector('[data-toggle-modal=\"popover\"]');\n\n  constructor() {\n    super();\n  }\n\n  openHoverModal() {\n    this._card.classList.toggle('hidden');\n    console.log('open');\n    this._modalOnMousePosition();\n  }\n  closeHoverModal() {\n    this._card.classList.toggle('hidden');\n  }\n\n  _addHandlerHoverCard() {\n    this._card.addEventListener('mouseover', openHoverModal());\n    this._card.addEventListener('mouseout', closeHoverModal());\n  }\n\n  _modalOnMousePosition(position) {\n    // const id = window.location.hash.slice(1);\n    let toolTipSpan = document.createElement('span');\n    toolTipSpan.id = `tooltip-span--${id}`;\n    const card = document.querySelector('.card');\n\n    // var tooltipSpan = document.getElementById('tooltip-span');\n\n    // document.querySelector('.nav__links').addEventListener('click', function (e) {\n    //   e.preventDefault();\n\n    //   // Matching strategy\n    //   if (e.target.classList.contains('nav__link')) {\n    //     const id = e.target.getAttribute('href');\n    //     document.querySelector(id).scrollIntoView({ behavior: 'smooth' });\n    //   }\n    // });\n\n    window.onmousemove = function (e) {\n      if (card.classList.contains('hover'))\n        var x = e.clientX,\n          y = e.clientY;\n      this.tooltipSpan.style.top = y + 20 + 'px';\n      this.tooltipSpan.style.left = x + 20 + 'px';\n      // <div class=\"card ${this._data.id === id ? 'card--active' : ''}\">\n    };\n  }\n\n  _generateMarkup() {\n    // const id = _parentElement.hasId === this_data.id\n\n    return `\n      <div class=\"hover-modal\">\n        <div class=\"hover-modal__info-container\">\n          <dl class=\"hover-modal__details-dl\">\n            <dd>\n              <h5 class=\"aside__title\">\"${this._data.title}\"</h5>\n            </dd>\n            <dd>\n              <time class=\"aside__date\" datetime=${this._data.date}>${date}</time>\n            </dd>\n            <dd class=\"aside__medium\">${this._data.medium}s</dd>\n            <dd class=\"aside__dimensions\">${this._data.dims.height} x ${this._data.dims.width}cm</dd>\n            <dd class=\"aside__sales-info\">£${this._data.price}</dd>\n            <dd class=\"aside__location\">Location: ${this._data.location}</dd>\n          </dl>\n        </div>\n      </div>\n    `;\n  }\n}\n\nexport default new CardsHoverModalView();\n","// import { Cloudinary } from '@cloudinary/url-gen';\n\nimport View from './View.js';\nimport cardsHoverModalView from './cardsHoverModalView.js';\nimport icons from 'url:../../../public/icons/icons.svg';\n\nclass GridCardsGalleryView extends View {\n  _parentElement = '';\n  // _parentElement = document.querySelector('.card');\n\n  // addHandlerAddBookmark(handler) {\n  //   this._parentElement.addEventListener('click', function (e) {\n  //     const btn = e.target.closest('.card__btn--bookmark');\n  //     if (!btn) return;\n  //     handler();\n  //   });\n  // }\n\n  _generateMarkup() {\n    const date = new Date(this._data.date);\n    const year = date.toLocaleString('en-GB', { year: 'numeric' });\n    let medium;\n    if (this._data.medium[1]) {\n      medium = this._data.medium[1];\n    } else {\n      medium = this._data.medium[0];\n    }\n\n    // const imgURL = `https://res.cloudinary.com/${}/image/fetch/\n    // `\n\n    // const cld = new Cloudinary({\n    //   cloud: {\n    //     cloudName: 'dpztejrq6'\n    //   }\n    // });\n\n    const id = window.location.hash.slice(1);\n    // ${this._data.render(cardsHoverModalView)}\n\n    return `\n      <div class=\"card grid-card ${\n        this._data.id === id ? 'card--active' : ''\n      }\" data-toggle-modal=\"popover\">\n        <div class=\"card__header\"></div>\n        <a class=\"card__image-container preview__link ${\n          this._data.id === id ? 'preview__link--active' : ''\n        }\" href=\"#${this._data.id}\">\n        <img src=\"images/artworks/${\n          this._data.image\n        }\" crossorigin=\"anonymous\" alt=\"${\n      this._data.title\n    }\" class=\"gallery-img\">\n        <button class=\"card__btn-round card__btn--bookmark\">\n          <svg class=\"\">\n          <use class=\"card__icon-bookmark\" href=\"${icons}#icon-bookmark${\n      this._data.bookmarked ? '-fill' : ''\n    }\"</use>\n          </svg>\n        </button>\n      </a>\n        <div class=\"card__space\"></div>\n        <div class=\"card__details\">\n          <ul>\n            <li class=\"card__artwork-title\">\"${this._data.title}\"</li>\n            <li class=\"card__artwork-date\">${year}</li>\n            <li class=\"card__artwork-medium\">${medium}</li>\n            <li class=\"card__artwork-dimensions\">${\n              this._data.dims.height.px\n            } x ${this._data.dims.width.px}cm</li>\n          </ul>\n        </div>\n        <div class=\"card__footer\"></div>\n      </div>\n    `;\n  }\n}\n\nexport default new GridCardsGalleryView();\n","import View from './View.js';\nimport icons from 'url:../../../public/icons/icons.svg';\n\nclass HorizontalMasonryGalleryView extends View {\n  _parentElement = '';\n\n  _generateMarkup() {\n    const id = window.location.hash.slice(1);\n    // const date = new Date(\n    //   this._data.date.toLocaleString('en-GB', { year: 'numeric' })\n    // );\n\n    return `\n        <div class=\"repeat card h-m-card ${\n          this._data.id === id ? 'h-m-card--active' : ''\n        }\" style=\"width:${\n      (this._data.width.px * 220) / this._data.height.px\n    }px;flex-grow:${\n      (this._data.width.px * 220) / this._data.height.px\n    }\" data-toggle-modal=\"popover\">\n          <a href=\"#${this._data.id}\">\n              <i style=\"padding-bottom:${\n                (this._data.height.px / this._data.width.px) * 100\n              }%\"></i>\n              <img class=\"horizontal-gallery-img\" src=\"images/artworks/${\n                this._data.image\n              }\" crossorigin=\"anonymous\" alt=\"${\n      this._data.title\n    }\" class=\"gallery-img\">\n    </a>\n    <button class=\"card__btn-round card__btn--bookmark\">\n          <svg class=\"\">\n          <use class=\"card__icon-bookmark\" href=\"${icons}#icon-bookmark${\n      this._data.bookmarked ? '-fill' : ''\n    }\"</use>\n          </svg>\n        </button>\n        </div>\n        <title>${this._data.title}</title>\n          `;\n  }\n\n  // <div class=\"card__details\">\n  // <ul>\n  // <li class=\"card__artwork-title\">${this._data.title}</li>\n  // <li class=\"card__artwork-dimensions\">${this._data.dims.height.px} x ${\n  //   this._data.dims.width.px\n  // }cm</li>\n  // </ul>\n  // </div>\n}\n\nexport default new HorizontalMasonryGalleryView();\n","import View from './View.js';\nimport icons from 'url:../../../public/icons/icons.svg';\n\nclass BookmarksView extends View {\n  _parentElement = document.querySelector('.gallery-container');\n  _errorMessage =\n    'No bookmarks yet. Choose your favourite artworks and bookmark them ;)';\n\n  addHandlerRender(handler) {\n    window.addEventListener('load', handler);\n  }\n\n  _generateMarkup() {\n    const date = new Date(this._data.date);\n    const year = date.toLocaleString('en-GB', { year: 'numeric' });\n\n    const id = window.location.hash.slice(1);\n    // ${this._data.render(cardsHoverModalView)}\n\n    return `\n      <div class=\"card ${this._data.id === id ? 'card--active' : ''}\">\n        <div class=\"card__header\"></div>\n        <a class=\"card__image-container preview__link ${\n          this._data.id === id ? 'preview__link--active' : ''\n        }\" href=\"#${this._data.id}\">\n        <img src=\"images/artworks/${\n          this._data.image\n        }\" crossorigin=\"anonymous\" alt=\"${\n      this._data.title\n    }\" class=\"gallery-img\">\n        <button class=\"card__btn-round card__btn--bookmark\">\n          <svg class=\"\">\n          <use class=\"card__icon-bookmark\" href=\"${icons}#icon-bookmark${\n      this._data.bookmarked ? '-fill' : ''\n    }\"</use>\n          </svg>\n        </button>\n      </a>\n        <div class=\"card__space\"></div>\n        <div class=\"card__details\">\n          <ul>\n            <li class=\"card__artwork-title\">${this._data.title}</li>\n            <li class=\"card__artwork-date\">${year}</li>\n            <li class=\"card__artwork-medium\">${this._data.medium[0]}</li>\n            <li class=\"card__artwork-dimensions\">${\n              this._data.dims.height.px\n            } x ${this._data.dims.width.px}cm</li>\n          </ul>\n        </div>\n        <div class=\"card__footer\"></div>\n      </div>\n    `;\n  }\n}\n\nexport default new BookmarksView();\n","import View from './View.js';\nimport { GALLERY_MODES } from '../config.js';\nimport gridCardsGalleryView from './gridCardsGalleryView.js';\nimport horizontalMasonryGalleryView from './horizontalMasonryGalleryView.js';\nimport bookmarksView from './bookmarksView.js';\n\nclass GalleryView extends View {\n  _parentElement = document.querySelector('.gallery-container');\n  _errorMessage = 'That artwork could not be found. Please try another one!';\n  _message = '';\n\n  _gallerySection = document.querySelector('#section-gallery');\n  _horizontalMasonryBtn = document.querySelector('.hmc__btn');\n  _gridCardsBtn = document.querySelector('.gc__btn');\n  _bookmarksBtn = document.querySelector('.bookmarks__btn');\n\n  _card = document.querySelector('.card');\n  _btnToggleCardInfo = document.querySelector('.btn--toggle__card-info');\n  // _cardInfo = document.querySelector('.card__details');\n\n  constructor() {\n    super();\n    this._addHandlerToggleCardInfo();\n  }\n\n  addHandlerRender(handler) {\n    window.addEventListener('load', handler);\n  }\n\n  date() {\n    const date = new Date(this._data.date);\n    const year = date.toLocaleString('en-GB', { year: 'numeric' });\n    return year;\n  }\n\n  /**\n   *\n   * @param {Object} mode The 'gallery mode' (e.g. 'grid-cards-gallery', 'horizonstal-masonry-gallery') to be rendered and set in localStorage.\n   * @todo Refactor and reduce repeated code; consider exporting functionality inside addHandlerClick() into another method with the 'this' keyword bound to it;\n   */\n  setGalleryMode(mode) {\n    if (mode) {\n      this._gallerySection.setAttribute('data-gallery-mode', mode);\n    } else {\n      this._gallerySection.getAttribute('data-gallery-mode');\n    }\n  }\n\n  addHandlerClick(handler) {\n    if (this._horizontalMasonryBtn) {\n      this._horizontalMasonryBtn.addEventListener('click', (e) => {\n        this.setGalleryMode(GALLERY_MODES[0]);\n        const { galleryMode } = this._gallerySection.dataset;\n        handler(galleryMode);\n      });\n    }\n    if (this._gridCardsBtn) {\n      this._gridCardsBtn.addEventListener('click', (e) => {\n        this.setGalleryMode(GALLERY_MODES[1]);\n        const { galleryMode } = this._gallerySection.dataset;\n        handler(galleryMode);\n      });\n    }\n    if (this._bookmarksBtn) {\n      this._bookmarksBtn.addEventListener('click', () => {\n        this.setGalleryMode(GALLERY_MODES[2]);\n        const { galleryMode } = this._gallerySection.dataset;\n        handler(galleryMode);\n      });\n    }\n  }\n\n  _generateMarkup() {\n    const currentMode = this._gallerySection.getAttribute('data-gallery-mode');\n    if (currentMode === GALLERY_MODES[0]) {\n      this._gridCardsBtn.classList.remove('cp__btn--active');\n      this._bookmarksBtn.classList.remove('cp__btn--active');\n      this._horizontalMasonryBtn.classList.add('cp__btn--active');\n      return this._data\n        .map((cards) => horizontalMasonryGalleryView.render(cards, false))\n        .join('');\n    }\n    if (currentMode === GALLERY_MODES[1]) {\n      this._horizontalMasonryBtn.classList.remove('cp__btn--active');\n      this._bookmarksBtn.classList.remove('cp__btn--active');\n      this._gridCardsBtn.classList.add('cp__btn--active');\n      return this._data\n        .map((cards) => gridCardsGalleryView.render(cards, false))\n        .join('');\n    }\n    if (currentMode === GALLERY_MODES[2]) {\n      this._gridCardsBtn.classList.remove('cp__btn--active');\n      this._horizontalMasonryBtn.classList.remove('cp__btn--active');\n      this._bookmarksBtn.classList.add('cp__btn--active');\n      return this._data.bookmarks\n        .map((cards) => bookmarksView.render(cards, false))\n        .join('');\n    }\n  }\n\n  /**\n   * @todo Finish implementation\n   */\n  _addHandlerToggleCardInfo() {\n    this._btnToggleCardInfo.addEventListener(\n      'click',\n      this.toggleCardInfo.bind(this)\n    );\n  }\n  toggleCardInfo() {\n    this._cardInfo.classList.toggle('hidden');\n  }\n\n  addHandlerAddBookmark(handler) {\n    this._parentElement.addEventListener('click', function (e) {\n      const btn = e.target.closest('.card__btn--bookmark');\n      if (!btn) return;\n      handler();\n    });\n  }\n}\nexport default new GalleryView();\n","class SearchView {\n  _parentElement = document.querySelector('.search');\n\n  getQuery() {\n    const query = this._parentElement.querySelector('.search__input').value;\n    this._clearInput();\n    return query;\n  }\n\n  _clearInput() {\n    this._parentElement.querySelector('.search__input').value = '';\n  }\n\n  addHandlerSearch(handler) {\n    this._parentElement.addEventListener('submit', function (e) {\n      e.preventDefault();\n      handler();\n    });\n  }\n}\n\nexport default new SearchView();\n","import View from './View.js';\n\n//TODO\nclass ResultsView extends View {\n  _parentElement = document.querySelector('.aside');\n  _errorMessage = 'No artworks found for your query! Please try again ;)';\n  _message = '';\n  // _parentElement = document.querySelector('.results');\n\n  _generateMarkup() {\n    // console.log(this._data);\n    return this._data.map(this._generateMarkupPreview).join('');\n  }\n\n  _generateMarkupPreview(result) {\n    return `\n      <div class=\"aside__slide\">\n        <img src=\"images/artworks/${result.image}\" alt=\"\" class=\"hover-shadow preview\" />\n      </div>\n      <div class=\"aside__spacer\"></div>\n      <div class=\"aside__text-container\">\n        <span class=\"aside__title\">\"${result.title}\"</span>\n        <span class=\"aside__date\">${result.date}</span>\n        <span class=\"aside__medium\">${result.medium}s</span>\n        <span class=\"aside__dimensions\">${result.dims.height}x${result.dims.width}</span>\n        <span class=\"aside__sales-info\">${result.price}</span>\n      </div>\n      <span class=\"aside__description\"\n      >${result.description}</span>\n    `;\n  }\n}\n\nexport default new ResultsView();\n","import View from './View.js';\nimport icons from 'url:../../../public/icons/icons.svg';\n\nclass PaginationView extends View {\n  _parentElement = document.querySelector('.pagination');\n\n  addHandlerClick(handler) {\n    this._parentElement.addEventListener('click', function (e) {\n      const btn = e.target.closest('.btn--inline');\n      if (!btn) return;\n\n      const goToPage = +btn.dataset.goto;\n\n      handler(goToPage);\n    });\n  }\n\n  _generateMarkup() {\n    const curPage = this._data.page;\n    const numPages = Math.ceil(\n      this._data.results.length / this._data.resultsPerPage\n    );\n\n    const prevButton = `\n      <button data-goto=\"${\n        curPage - 1\n      }\" class=\"btn cp__btn btn--inline pagination__btn--prev\">\n        <svg class=\"pagination__icon\">\n          <use href=\"${icons}#icon-arrow-left\"></use>\n        </svg>\n        <span>Page ${curPage - 1}</span>\n      </button>\n    `;\n\n    const nextButton = `\n      <button data-goto=\"${\n        curPage + 1\n      }\" class=\"btn cp__btn btn--inline pagination__btn--next\">\n        <span>Page ${curPage + 1}</span>\n        <svg class=\"pagination__icon\">\n          <use href=\"${icons}#icon-arrow-right\"></use>\n        </svg>\n      </button>\n    `;\n\n    // Page 1, and there are other pages\n    if (curPage === 1 && numPages > 1) {\n      return nextButton;\n    }\n    // Last page\n    if (curPage === numPages && numPages > 1) {\n      return prevButton;\n    }\n    // Other page\n    if (curPage < numPages) {\n      return prevButton + nextButton;\n    }\n    // Page 1, and there are NO other pages\n    return '';\n  }\n\n  // _generateMarkupButton() {}\n}\n\nexport default new PaginationView();\n","import icons from 'url:../../../public/icons/icons.svg';\nimport View from './View.js';\n\nclass AsideModalView extends View {\n  _parentElement = document.querySelector('.aside');\n  // _btnToggleBoxA = document.querySelector('.btn--toggle__box-A');\n  _btnToggleBoxB = document.querySelector('.btn--toggle__box-B');\n  _btnClose = document.querySelector('.aside__btn--close');\n  _aside = document.querySelector('.box-B');\n  _sectionGallery = document.querySelector('.section-gallery');\n  // _fullWidth = document.querySelector('.full-width'); // Refactor into GalleryView\n\n  constructor() {\n    super();\n    this._addHandlerToggleWindow();\n    // this._addHandlerHideWindow();\n  }\n  addHandlerRender(handler) {\n    ['hashchange', 'load'].forEach((ev) =>\n      window.addEventListener(ev, handler)\n    );\n  }\n\n  // toggleBoxA() {\n  //   this._sectionGallery.classList.toggle('hidden');\n  //   const sectionFullWidth = function () {\n  //     if (this._fullWidth) this._sectionGallery.style.width = '100%';\n  //   };\n  //   sectionFullWidth();\n  // }\n\n  toggleBoxB() {\n    this._aside.classList.toggle('hidden');\n    this._sectionGallery.classList.toggle('full-width');\n    // if (this._fullWidth) this._sectionGallery.style.width = '100%';\n  }\n  // const sectionFullWidth = function () {\n  //   // const fullWidth = document.querySelector('.full-width');\n  //   // const sectionWidth = sectionGallery.clientWidth;\n  //   // const fullWidth = ();\n  //   if (this._fullWidth) this._sectionGallery.style.width = '100%';\n  //   // console.log(sectionWidth);\n  //   // sectionGallery.style.width = sectionWidth + 100 + 'px';\n  // };\n  // sectionFullWidth();\n\n  // fullWidthSection() {\n  //   const sectionFullWidth = document.querySelector('.full-width');\n  //   // const sectionWidth = sectionGallery.clientWidth;\n  //   // const fullWidth = ();\n  //   if (sectionFullWidth) sectionGallery.style.width = '100%';\n  //   // console.log(sectionWidth);\n  //   // sectionGallery.style.width = sectionWidth + 100 + 'px';\n  // }\n\n  _addHandlerToggleWindow() {\n    // this._btnToggleBoxA.addEventListener('click', this.toggleBoxA.bind(this));\n    this._btnToggleBoxB.addEventListener('click', this.toggleBoxB.bind(this));\n  }\n\n  // _addHandlerHideWindow() {\n  //   this._btnClose.addEventListener('click', this.toggleWindow.bind(this));\n  // }\n\n  modalZoom() {\n    const zoomIn = document.querySelector('.aside__btn--zoom-in');\n    const zoomOut = document.querySelector('.aside__btn--zoom-out');\n    const slide = document.querySelector('.preview');\n    const sectionGallery = document.getElementById('section-gallery');\n\n    zoomIn.addEventListener('click', () => {\n      const curWidth = slide.clientWidth;\n      slide.style.width = curWidth + 100 + 'px';\n      // For Fixed Positioning of Box-B / Aside\n      const sectionWidth = sectionGallery.clientWidth;\n      sectionGallery.style.width = sectionWidth - 100 + 'px';\n    });\n    zoomOut.addEventListener('click', () => {\n      const curWidth = slide.clientWidth;\n      slide.style.width = curWidth - 100 + 'px';\n      // For Fixed Positioning of Box-B / Aside\n      const sectionWidth = sectionGallery.clientWidth;\n      sectionGallery.style.width = sectionWidth + 100 + 'px';\n    });\n  }\n\n  /**\n   *\n   * @param {*} handler\n   * @todo Update / connect bookmarks in gallery-cards with bookmarks in aside-modal.\n   */\n  addHandlerAddBookmark(handler) {\n    this._parentElement.addEventListener('click', function (e) {\n      const btn = e.target.closest('.aside__btn--bookmark');\n      if (!btn) return;\n      handler();\n    });\n  }\n\n  _generateMarkup() {\n    return `\n      ${this._generateMarkupAsideFigure()}\n    `;\n  }\n\n  _generateMarkupAsideBtns() {\n    // <button class=\"aside__btn aside__btn--open\">Open</button>\n    return `\n    <button class=\"aside__btn--zoom-in\">\n      &plus;\n    </button>\n    <button class=\"aside__btn--zoom-out\">\n      &minus;\n    </button>\n      `;\n  }\n\n  _generateMarkupAsideFigure() {\n    return `\n      <figure class=\"aside__figure\">\n        ${this._generateMarkupAsideBtns()}\n        <div class=\"aside__content\">\n          <div class=\"aside__slide-container\">\n            <a class=\"preview-container lightbox-link\">\n              <img src=\"images/artworks/${\n                this._data.image\n              }\" alt=\"\" class=\"hover-shadow preview\" />\n            </a>\n          </div>\n          \n          <div class=\"u-spacing-m\"></div>\n          <div class=\"aside__icons-container\">\n            <button class=\"aside__btn--bookmark\">\n                <svg class=\"\">\n                  <use class=\"aside__icon-bookmark\" href=\"${icons}#icon-bookmark${\n      this._data.bookmarked ? '-fill' : ''\n    }\"</use>\n                </svg>\n            </button>\n          </div>\n          ${this._generateMarkupAsideFigcaption()}\n        </div>\n        <button class=\"aside__btn--previous\">\n          <a class=\"previous\">&#x276E</a>\n        </button>\n        <button class=\"aside__btn--next\">\n          <a class=\"next\">&#x276F</a>\n        </button>\n      </figure>`;\n  }\n\n  _generateMarkupAsideFigcaption() {\n    const date = new Date(this._data.date);\n    const year = date.toLocaleString('en-GB', { year: 'numeric' });\n\n    const figure = document.querySelector('.aside__figure');\n    // figure.insertAdjacentHTML(\n    //   'beforeend',\n    //   this._generateMarkupAsideFigcaption()\n    // );\n\n    return `\n      <figcaption class=\"aside__figcaption\">\n        <div class=\"aside__info-container\">\n          <dl class=\"aside__details-dl\">\n            <dd class=\"aside__title\">\"${this._data.title}\"</dd>\n            <dd>\n              <time class=\"aside__date\" datetime=${this._data.date}>${year}</time>\n            </dd>\n            <dd class=\"aside__medium\">${this._data.medium[0]}</dd>\n            <dd class=\"aside__dimensions\">${this._data.dims.height.px} x ${this._data.dims.width.px}cm</dd>\n            <dd class=\"aside__sales-info\">£${this._data.price}</dd>\n            <dd class=\"aside__location\">Location: ${this._data.location}</dd>\n          </dl>\n        </div>\n        <div class=\"u-spacing-xl\"></div>\n        <div class=\"aside__text-container\">\n          <p class=\"aside__description\">Description: ${this._data.description}</p>\n          <div class=\"u-spacing-m\"></div>\n          <p class=\"aside__tags\">Tags: ${this._data.tags}</p>\n        </div>\n      </figcaption>\n    `;\n  }\n\n  // _generateMarkup() {\n  //   return (\n  //     `\n  //     <figure class=\"aside__slide\">\n  //       <img src=\"images/artworks/${this._data.image}\" alt=\"\" class=\"hover-shadow preview\" />\n  //     </figure>\n  //     <div class=\"aside__spacer\"></div>\n  //     <div class=\"aside__details-container\">` +\n  //     `${_spanEl('date', '', this._data.date)}` +\n  //     // <span class=\"aside__date\">${this._data.date}</span>\n  //     // <span class=\"aside__medium\">${this._data.medium}s</span>\n  //     // <span class=\"aside__dimensions\">${this._data.dims.height}x${this._data.dims.width}</span>\n  //     // <span class=\"aside__sales-info\">${this._data.price}</span>\n  //     // <span class=\"aside__location\">Location: ${this._data.location}</span>\n  //     `</div>\n  //     <figcaption class=\"aside__text-container\">\n  //       <span class=\"aside__description\">Description: ${this._data.description}</span>\n  //       <span class=\"aside__tags\">Tags: ${this._data.tags}</span>\n  //     </figcaption>\n  //   `\n  //   );\n  // }\n}\n\nexport default new AsideModalView();\n","import View from './View.js';\n\nclass controlPanelView extends View {\n  // _parentElement = document.querySelector('.control-panel');\n  _controlPanel = document.querySelector('.control-panel');\n  _cogBtn = document.querySelector('.cog-btn');\n  _galleryWindow = document.querySelector('.gallery-container');\n  _galleryWindow = document.querySelector('.gallery-window');\n  _gallerySettings = document.querySelector('.gallery-settings');\n  _filterMenu = document.querySelector('.filter-menu__container');\n  _galleryControlPanel = document.querySelector('.gallery-control-panel');\n  _btnToggleControlPanel = document.querySelector(\n    '.btn--toggle__control-panel'\n  );\n  // _btnToggleBoxB = document.querySelector('.btn--toggle__box-B');\n\n  _btnToggleFilterMenu = document.querySelector('.btn--toggle__filter-menu');\n  // _btnToggleGalleryWindow = document.querySelector(\n  //   '.btn--toggle__gallery-window'\n  // );\n\n  constructor() {\n    super();\n    this._addHandlerToggle();\n  }\n\n  addHandlerRender(handler) {\n    window.addEventListener('load', handler);\n  }\n\n  toggleCP() {\n    this._controlPanel.classList.toggle('hidden');\n    this._filterMenu.classList.toggle('hidden');\n    this._galleryControlPanel.classList.toggle('hidden');\n  }\n  toggleGW() {\n    this._galleryWindow.classList.toggle('.collapse-Y');\n    this._controlPanel.classList.toggle('hidden');\n  }\n  toggleFM() {\n    this._filterMenu.classList.toggle('hidden');\n  }\n\n  _addHandlerToggle() {\n    this._btnToggleControlPanel.addEventListener(\n      'click',\n      this.toggleCP.bind(this)\n    );\n    this._btnToggleControlPanel.addEventListener(\n      'click',\n      this.toggleCP.bind(this)\n    );\n    // this._btnToggleGalleryWindow.addEventListener(\n    //   'click',\n    //   this.toggleGW.bind(this)\n    // );\n    this._btnToggleFilterMenu.addEventListener(\n      'click',\n      this.toggleFM.bind(this)\n    );\n  }\n\n  _generateMarkup() {}\n}\nexport default new controlPanelView();\n","import View from './View.js';\n\nclass SettingsModalView extends View {\n  _parentElement = document.querySelector('.nav__settings-modal');\n\n  // _allEls = document.getElementsByTagName('div');\n  _allEls = document.querySelectorAll('div');\n  _cogBtn = document.querySelector('.cog-btn');\n  _overlay = document.querySelector('.overlay');\n\n  _themeSwitch = document.querySelector('.theme-switch input[type=\"checkbox\"]');\n  // _currentTheme = this._data;\n\n  constructor() {\n    super();\n    // this._addHandlerToggleModal();\n    this._addHandlerOpenModal();\n    this._addHandlerCloseModal();\n    this._addHandlerThemeSwitch();\n    // this._resetTheme();\n  }\n\n  // addHandlerRender(handler) {\n  //   ['hashchange', 'load'].forEach((ev) =>\n  //     window.addEventListener(ev, handler)\n  //   );\n  // }\n  // addHandlerRender(handler) {\n  //   ['click', 'mouseover'];\n  //   window.addEventListener('load', handler);\n  // }\n  openModal() {\n    this._overlay.classList.remove('hidden');\n    this._parentElement.classList.remove('hidden');\n  }\n\n  closeModal() {\n    this._overlay.classList.add('hidden');\n    this._parentElement.classList.add('hidden');\n  }\n  _addHandlerOpenModal() {\n    ['click', 'mouseover'].forEach((ev) =>\n      this._cogBtn.addEventListener(ev, this.openModal.bind(this))\n    );\n  }\n\n  _addHandlerCloseModal() {\n    ['click'].forEach((ev) =>\n      this._overlay.addEventListener(ev, this.closeModal.bind(this))\n    );\n  }\n  //   this._overlay.addEventListener(\n  //     (ev) => 'mouseover',\n  //     this.closeModal.bind(this)\n  //   );\n  // }\n\n  // _addHandlerCloseModal() {\n  //   this._overlay.addEventListener(\n  //     (ev) => 'mouseover',\n  //     this.closeModal.bind(this)\n  //   );\n  // }\n\n  /* TOGGLE MODAL\n  _addHandlerToggleModal() {\n    this._cogBtn.addEventListener('click', this.toggleModal.bind(this));\n    this._overlay.addEventListener('click', this.toggleModal.bind(this));\n  }\n\n  toggleModal() {\n    this._overlay.classList.toggle('hidden');\n    this._parentElement.classList.toggle('hidden');\n  }\n*/\n  setTheme(theme) {\n    document.documentElement.setAttribute('data-theme', theme);\n    if (theme === 'dark') this._themeSwitch.checked;\n    console.log(theme === 'dark');\n    // if(theme === null || theme === 'light');\n    // if (this._themeSwitch.checked) {\n    //   document.documentElement.setAttribute('data-theme', 'dark');\n    // }\n  }\n\n  changeThemeToDark() {\n    document.documentElement.setAttribute('data-theme', 'dark');\n  }\n\n  changeThemeToLight() {\n    document.documentElement.setAttribute('data-theme', 'light');\n  }\n  switchTheme(e) {\n    if (e.target.checked) {\n      // console.log(e.target.checked);\n      this.changeThemeToDark();\n      // this.setTheme(this.changeThemeToDark)\n      // const { theme } = document.documentElement.dataset;\n      // this.setTheme(theme);\n    } else {\n      this.changeThemeToLight();\n      // console.log(e.target.checked);\n      // const { theme } = document.documentElement.dataset;\n      // this.setTheme(theme);\n    }\n  }\n\n  addHandlerClick(handler) {\n    if (this._themeSwitch) {\n      this._themeSwitch.addEventListener('click', () => {\n        this.setTheme(theme);\n        const { theme } = document.documentElement.dataset;\n        handler(theme);\n      });\n    }\n  }\n\n  _addHandlerThemeSwitch() {\n    if (this._themeSwitch) {\n      this._themeSwitch.addEventListener('change', this.switchTheme.bind(this));\n    }\n  }\n\n  ////////\n\n  _resetTheme() {\n    // if (this._themeSwitch.checked && this._data.theme === 'dark') {\n    if (this._themeSwitch.checked) {\n      document.documentElement.setAttribute('data-theme', 'dark');\n    }\n  }\n\n  /*\n\n  _generateMarkup() {\n    return `\n      <p>${this._data}</p>\n    `;\n    // console.log(this._data.theme);\n  }\n\n  switchTheme(data) {\n    // this._data = data;\n    // console.log(this._data);\n    console.log('switch theme');\n  }\n\n  switchTheme() {\n    if (this._themeSwitch) {\n      initTheme();\n    }\n  }\n*/\n  // _resetTheme() {\n  //   // if (this._themeSwitch.checked && this._data.theme === 'dark') {\n  //   if (this._themeSwitch.checked) {\n  //     document.documentElement.setAttribute('data-theme', 'dark');\n  //   }\n  // }\n  /*\n  switchTheme(mode) {\n    const currentTheme = this._data.theme;\n    console.log(currentTheme);\n    document.documentElement.setAttribute('data-theme', currentTheme);\n\n    if (currentTheme === 'dark') {\n      this._toggleSwitch.checked = true;\n    }\n  }\n  */\n\n  _generateMarkup() {}\n}\n\nexport default new SettingsModalView();\n","import View from './View.js';\n\nclass FiltersView extends View {\n  _filterMenu = document.querySelector('.filter-menu');\n  _controlPanel = document.querySelector('.control-panel');\n  // _filterBox = document.querySelector('.filter-box__container');\n  _filtersForm = document.querySelector('.filters-form');\n  _clearBtn = document.querySelector('.filter-menu__clear-btn');\n  _filterSearchBtn = document.querySelector('.filter-search');\n  // _filterBoxBtnsWrapper = filter-box__btns-wrapper\"></div>\n\n  constructor() {\n    super();\n    // this._toggleFilterBtns();\n    this._clear();\n    this._addHandlerSearchBtn();\n  }\n\n  addHandlerRender(handler) {\n    window.addEventListener('load', handler);\n  }\n\n  _generateMarkup() {\n    this.filterBox('medium');\n    // this.filterBox('tags');\n    this.filterBox('categories');\n    this.filterBox('location');\n    this.filterBox('priceRange');\n    // this.filterBox('price');\n    // this.filterBox('dimensions');\n  }\n\n  // _generateMarkupFilterMenuControlBtns() {\n  //   return `\n  //   `;\n  // }\n\n  filterBox(field) {\n    let artworks = this._data;\n\n    const arr = [];\n    artworks.forEach((artwork) =>\n      typeof artwork[field] === 'string'\n        ? arr.push(artwork[field])\n        : arr.push(...artwork[field])\n    );\n\n    const set = [...new Set(arr)];\n\n    const filterBox = document.createElement('div');\n    filterBox.classList.add('filter-box');\n    filterBox.setAttribute('data-filter', field);\n    this._filterMenu.prepend(filterBox);\n\n    const h3 = document.createElement('h3');\n    h3.classList.add('filter__h3');\n    h3.textContent = field;\n\n    const h3Wrap = document.createElement('div');\n    h3Wrap.classList.add('filter__h3-wrap');\n    filterBox.append(h3Wrap);\n    h3Wrap.insertAdjacentElement('afterbegin', h3);\n\n    const btnsWrap = document.createElement('div');\n    btnsWrap.classList.add('filter__btns-wrapper');\n    filterBox.append(btnsWrap);\n\n    set.forEach((el) => {\n      const btn = document.createElement('button');\n      btn.classList.add('filter-box__btn');\n      btn.textContent = el;\n      btn.urlz = el;\n      btn.addEventListener('click', this.getData);\n      btnsWrap.append(btn);\n    });\n\n    // filterBox(field) {\n    //   let artworks = this._data;\n\n    //   const arr = [];\n    //   artworks.forEach((artwork) =>\n    //     typeof artwork[field] === 'string'\n    //       ? arr.push(artwork[field])\n    //       : arr.push(...artwork[field])\n    //   );\n    //   const set = [...new Set(arr)];\n\n    //   const filterBox = document.createElement('div');\n    //   filterBox.classList.add('filter-box');\n\n    //   const category = document.createElement('h3');\n    //   category.classList.add('filter__h3');\n    //   category.textContent = field;\n    //   category.urlz = field;\n\n    //   const categoryWrapper = document.createElement('div');\n    //   categoryWrapper.classList.add('filter-category');\n    //   categoryWrapper.insertAdjacentHTML('afterbegin', category);\n\n    //   const btnWrapper = document.createElement('div');\n    //   btnWrapper.classList.add('filter-btns__wrapper');\n    //   filterBox.insertAdjacentHTML('afterbegin', category);\n    //   filterBox.insertAdjacentHTML('beforeend', btnWrapper);\n\n    //   // filterBox.insertAdjacentHTML(\n    //   // 'afterbegin',\n    //   set.forEach((el) => {\n    //     const btn = document.createElement('button');\n    //     btn.classList.add('filter-box__btn');\n    //     btn.setAttribute('data-doc-tag', el);\n    //     btn.textContent = el;\n    //     btn.urlz = el;\n    //     btn.addEventListener('click', this.getData);\n    //     filterBox.insertAdjacentElement('beforeend', btn);\n    //   });\n\n    // );\n    // const h3 = document.createElement('h3');\n    // h3.classList.add('filter__h3');\n    // h3.textContent = field;\n    // h3.urlz = field;\n    // this._filterBox.append(h3);\n    // set.forEach((el) => {\n    //   const btn = document.createElement('button');\n    //   btn.classList.add('filter-box__btn');\n    //   btn.setAttribute('data-doc-tag', el);\n    //   btn.textContent = el;\n    //   btn.urlz = el;\n    //   this._filterBox.append(btn);\n    //   btn.addEventListener('click', this.getData);\n    // });\n  }\n\n  _generateMarkupFilterCategories(field) {\n    const h3 = document.createElement('h3');\n    h3.classList.add('filter__h3');\n    h3.textContent = field;\n    h3.urlz = field;\n    const parentEl = document.createElement('div');\n    parentEl.classList.add('filter-heading');\n    this._filterMenu.append(parentEl);\n    parentEl.insertAdjacentElement('afterbegin', h3);\n    // this._filterBox.append(h3);\n    // this._filterBox.style.backgroundColor = 'white';\n  }\n\n  _generateMarkupFilterBtns(el) {\n    const btn = document.createElement('button');\n    btn.classList.add('filter-box__btn');\n    btn.setAttribute('data-doc-tag', el);\n    btn.textContent = el;\n    btn.urlz = el;\n    btn.addEventListener('click', this.getData);\n    // this._filterMenu.insertAdjacentElement('afterbegin', btn);\n    this._filterMenu.append(btn);\n  }\n  _generateMarkupFilterCheckboxes(el) {\n    const markup = `\n      <div class=\"form__group\">\n        <input type=\"checkbox\" class=\"form__input\" placeholder=\"${el}\" id=\"filter\" />\n        <label for=\"filter\" class=\"form__label\">${el}</label>\n      </div>\n    `;\n    this._filtersForm.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  getData(e) {\n    e.target.classList.toggle('filter-box__btn--active');\n    console.log(e.target.textContent);\n    const el = e.target.textContent;\n    // const convertToURLString = function (str) {\n    //   const convertToCamelCase = str => {\n    //     str.toLowerCase()\n\n    //   }};\n    // };\n  }\n\n  _addHandlerSearchBtn() {\n    this._filterSearchBtn.addEventListener(\n      'clicked',\n      this._sendQueryStringToURL.bind(this)\n    );\n  }\n  _sendQueryStringToURL(e, query) {\n    console.log(e.target);\n    // if(e.target.)\n    // })\n    e.target.textContent = query;\n  }\n\n  _sortByAlphabeticalOrder() {}\n  _sortByChronologicalOrder() {}\n  _sortByDate() {}\n\n  _clear() {\n    this._clearBtn.addEventListener('click', function () {\n      // remove --active class from all btns\n      const btns = document.querySelectorAll('filter-box__btn');\n      console.log(btns);\n      btns.classList.remove('filter-box__btn--active');\n    });\n  }\n\n  // toggleURLquery(e) {\n  //   const el = e.target;\n  //   console.log(el);\n  // }\n\n  // _toggleFilterBtns(handler) {\n  //   const btn = document.querySelector('.filter-box__btn');\n  //   console.log(btn);\n  //   btn.addEventListener('click', this.toggleURLquery.bind(this));\n  // }\n  //   _priceRanges() {\n  //     const data = this._data;\n  //     // let { sales } = data.data.artworks;\n  //     // console.log(sales);\n  //     // let priceRange = this.sales.priceRange;\n\n  //     const minMaxPrice = (min, max) => {\n  //       if (data.price >= min && sales.price <= max)\n  //         sales.priceRange = `£${min} to £${max}`;\n  //     };\n\n  //     const priceRanges = () => {\n  //       minMaxPrice(0, 99);\n  //       minMaxPrice(100, 250);\n  //       minMaxPrice(250, 500);\n  //       minMaxPrice(500, 750);\n  //       minMaxPrice(750, 1000);\n  //       if (sales.price >= 1000) sales.priceRange = '£1000+';\n  //     };\n  //     priceRanges();\n  //     console.log(sales.priceRange);\n  //   }\n  //   getData(e) {\n  //     console.log(e.target.textContent);\n  //     const el = e.target.textContent;\n  //     // const convertToURLString = function (str) {\n  //     //   const convertToCamelCase = str => {\n  //     //     str.toLowerCase()\n\n  //     //   }};\n  //     // };\n  //   }\n  // }\n\n  /*\n  \n  _generateMarkupFilterCategories(field) {\n    const markup = `\n      <h3 class=\"filter-heading--${field}\">${field}</h3>\n    `;\n    this._filterBox.append(markup);\n    // this._filterBox.style.backgroundColor = 'white';\n  }\n\n  _generateMarkupFilterCheckboxes(el) {\n    const markup = `\n      <div class=\"form__group\">\n        <input type=\"checkbox\" class=\"form__input\" placeholder=\"${el}\" id=\"filter\" />\n        <label for=\"filter\" class=\"form__label\">${el}</label>\n      </div>\n    `;\n    this._filtersForm.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  \n  \n  \n  */\n\n  /*\nconst convertTitleCase = function (title) {\n  const capitalise = (str) =>\n    str[0] === '('\n      ? str[0] + str[1].toUpperCase() + str.slice(2)\n      : str[0].toUpperCase() + str.slice(1);\n  const exceptions = [\n    'a',\n    'an',\n    'the',\n    'but',\n    'of',\n    'or',\n    'on',\n    'in',\n    'with',\n    'da',\n  ];\n  const titleCase = title\n    .toLowerCase()\n    .split(' ')\n    .map((word) => (exceptions.includes(word) ? word : capitalise(word)))\n    .join(' ');\n  return capitalise(titleCase);\n};\nthis.title = convertTitleCase(this.title);\n// this.medium = convertTitleCase(this.medium);\nnext();\n*/\n\n  /*\n\nimport View from './View.js';\n\nclass FiltersView extends View {\n  // _parentElement = document.querySelector('.filter-menu');\n  _filterBox = document.querySelector('.filter-box__container');\n\n  addHandlerRender(handler) {\n    window.addEventListener('load', handler);\n  }\n\n  _generateMarkup() {\n    this.filterArtworks('medium');\n    this.filterArtworks('tags');\n    // this.filterArtworks('price');\n    this.filterArtworks('priceRange');\n    // this.filterArtworks('dimensions');\n    // this.filterArtworks('categories');\n  }\n\n  filterArtworks(field) {\n    let artworks = this._data;\n\n    const arr = [];\n    artworks.forEach((artwork) =>\n      typeof artwork[field] === 'string'\n        ? arr.push(artwork[field])\n        : arr.push(...artwork[field])\n    );\n    const set = [...new Set(arr)];\n\n    this._generateMarkupFilterCategories(field);\n    set.forEach((el) => {\n      this._generateMarkupFilterBtns(el);\n    });\n  }\n\n  _generateMarkupFilterCategories(field) {\n    const h1 = document.createElement('h1');\n    h1.textContent = field;\n    h1.urlz = field;\n    this._filterBox.append(h1);\n    // this._filterBox.style.backgroundColor = 'white';\n  }\n\n  _generateMarkupFilterBtns(el) {\n    const btn = document.createElement('button');\n    btn.classList.add('filter-box__btn');\n    btn.setAttribute('data-doc-tag', el);\n    btn.textContent = el;\n    btn.urlz = el;\n    this._filterBox.append(btn);\n    btn.addEventListener('click', this.getData);\n  }\n}\n*/\n}\nexport default new FiltersView();\n","import View from './View.js';\n\nclass ModalPopupView extends View {\n  _parentElement = document.querySelector('.card');\n\n  _toggleModal() {}\n\n  _addHandlerRender() {\n    this._parentElement.addEventListener('hover', this._toggleModal.bind(this));\n  }\n\n  _generateMarkup() {\n    return `\n      <div class=\"hover-modal\">\n        <div class=\"hover-modal__info-container\">\n          <dl class=\"hover-modal__details-dl\">\n            <dd>\n              <h5 class=\"aside__title\">\"${this._data.title}\"</h5>\n            </dd>\n            <dd>\n              <time class=\"aside__date\" datetime=${this._data.date}>${date}</time>\n            </dd>\n            <dd class=\"aside__medium\">${this._data.medium}s</dd>\n            <dd class=\"aside__dimensions\">${this._data.dims.height} x ${this._data.dims.width}cm</dd>\n            <dd class=\"aside__sales-info\">£${this._data.price}</dd>\n            <dd class=\"aside__location\">Location: ${this._data.location}</dd>\n          </dl>\n        </div>\n      </div>\n    `;\n  }\n}\n\nexport default new ModalPopupView();\n","import View from './View.js';\n\nclass ArtistStatementView extends View {\n  _parentElement = document.querySelector('.gallery-container');\n  _link = document.querySelector('.artist-statement');\n\n  addHandlerRender(handler) {\n    this._link.addEventListener('click', handler);\n  }\n}\n\nexport default new ArtistStatementView();\n","import * as model from './model.js';\nimport galleryView from './views/galleryView.js';\nimport searchView from './views/searchView.js';\nimport resultsView from './views/resultsView.js';\nimport paginationView from './views/paginationView.js';\nimport asideModalView from './views/asideModalView.js';\nimport controlPanelView from './views/controlPanelView.js';\nimport settingsModalView from './views/settingsModalView.js';\nimport filtersView from './views/filtersView';\nimport bookmarksView from './views/bookmarksView.js';\nimport modalPopupView from './views/modalPopupView.js';\nimport artistStatementView from './views/artistStatementView.js';\nimport cardsHoverModalView from './views/cardsHoverModalView.js';\nimport addArtworkView from './views/addArtworkView.js';\n\nconst controlGallery = async function () {\n  try {\n    // Disable to access artworks with inputting #id\n    // const id = window.location.hash.slice(1);\n    // console.log(id);\n\n    // if (!id) return;\n    galleryView.renderSpinner();\n\n    // 1) galleryModeInit() is called in model\n    //FIXME horizontalMasonryGallery cannot calculate dimensions until data is loaded. Temp fix = set gridCardsGallery to default, but unforunately I wanted horizontalMasonry as default!\n    // window.addEventListener(\n    //   'loadeddata',\n    galleryView.setGalleryMode(model.state.galleryMode);\n    // );\n    // galleryView.initGalleryMode(model.state.galleryMode);\n\n    // Update results view to mark selected search results\n    // galleryView.update(model.getSearchResultsPage());\n\n    // loading Gallery\n    await model.loadArtworks();\n    // await model.loadSearchResults();\n\n    // Rendering Gallery\n    // galleryView.render(model.state.search.results);\n    galleryView.render(model.state.artworks);\n  } catch (err) {\n    galleryView.renderError();\n    console.log(err);\n  }\n};\n\nconst controlGalleryMode = async function (mode) {\n  try {\n    // 1) galleryModeInit() is called in model\n    galleryView.renderSpinner();\n    model.updateGalleryMode(mode);\n    galleryView.setGalleryMode(model.state.galleryMode);\n    // await model.loadSearchResults();\n    // galleryView.render(model.state.search.results);\n    await model.loadArtworks();\n    galleryView.render(model.state.artworks);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst controlSearchResults = async function () {\n  try {\n    // resultsView.renderSpinner();\n    galleryView.renderSpinner();\n    // console.log(resultsView);\n    // 1) Get search query\n    const query = searchView.getQuery();\n    if (!query) return;\n\n    // 2) load search results\n    // await model.loadSearchResults();\n    await model.loadSearchResults(query);\n\n    // 3) Render results\n    // console.log(model.state.search.results);\n    // resultsView.render(model.state.search.results);\n    // resultsView.render(model.getSearchResultsPage());\n    galleryView.render(model.getSearchResultsPage());\n    // controlPanelView.render(model.getSearchResultsPage);\n    // controlPanelView.render(model.getSearchResultsPage());\n    // galleryView.render()\n    //\n    // 4) Render initial pagination buttons\n    paginationView.render(model.state.search);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst controlPagination = function (goToPage) {\n  // 1) Render NEW results\n  galleryView.render(model.getSearchResultsPage(goToPage));\n\n  // 2) Render NEW pagination buttons\n  paginationView.render(model.state.search);\n};\n\nconst controlAsideModal = async function () {\n  try {\n    const id = window.location.hash.slice(1);\n    console.log(id);\n\n    if (!id) return;\n    asideModalView.renderSpinner();\n\n    await model.loadArtwork(id);\n    // await model.loadArtworks();\n\n    // asideView.render(model.state.artworks);\n    asideModalView.render(model.state.artwork);\n    asideModalView.modalZoom();\n    // asideModalView.update(model.state.artwork);\n  } catch (err) {\n    asideModalView.renderError();\n  }\n};\n\nconst controlAddBookmark = function () {\n  // 1) Add or remove bookmark\n  if (\n    !model.state.artwork.bookmarked ||\n    !model.state.search.results.bookmarked\n    // !model.state.artworks.bookmarked\n  ) {\n    model.addBookmark(model.state.artwork);\n    model.addBookmark(model.state.search.results);\n    // model.addBookmark(model.state.artworks);\n  } else {\n    model.deleteBookmark(model.state.artwork.id);\n    model.deleteBookmark(model.state.search.results.id);\n    // model.deleteBookmark(model.state.artworks.id);\n  }\n\n  // 2) Update aside / gallery view\n  asideModalView.update(model.state.artwork);\n  galleryView.update(model.state.search.results);\n  // galleryView.update(model.state.artworks);\n\n  // bookmarksView.render(model.state.search.results);\n\n  // 3) Render bookmarks\n  // galleryView.render(model.state.artwork);\n  // bookmarksView.render(model.state.bookmarks);\n};\n\nconst controlBookmarks = function () {\n  // bookmarksView.render(model.state.bookmarks);\n  // searchView.render(model.state.bookmarks);\n  galleryView.render(model.state.bookmarks);\n};\n\nconst controlPanel = async function () {\n  try {\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst controlSettingsModal = async function () {\n  settingsModalView.render();\n};\n\nconst controlFilters = async function (filters) {\n  try {\n    await model.loadFilterCategories();\n    filtersView.render(model.state.search.filterFields);\n    // console.log(model.state.search.filterFields, '😂');\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst controlArtistStatement = async function () {\n  try {\n    artistStatementView.render(model.state.artistStatement);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// const controlAddBookmarkGallery = function () {\n//   model.addBookmark(model.state.artwork);\n//   console.log(model.state.artwork);\n//   galleryView.update(model.state.artwork);\n// };\n\nconst init = function () {\n  bookmarksView.addHandlerRender(controlBookmarks);\n  galleryView.addHandlerRender(controlGallery);\n  galleryView.addHandlerClick(controlGalleryMode);\n  controlPanelView.addHandlerRender(controlPanel);\n  filtersView.addHandlerRender(controlFilters);\n  searchView.addHandlerSearch(controlSearchResults);\n  // galleryView.addHandlerRender(controlSearchResults);\n  paginationView.addHandlerClick(controlPagination);\n  galleryView.addHandlerAddBookmark(controlAddBookmark);\n  // modalPopupView.addHandlerRender()\n  // cardsHoverModalView.add\n  // asideView must be called AFTER galleryView and paginationView\n  asideModalView.addHandlerRender(controlAsideModal);\n  asideModalView.addHandlerAddBookmark(controlAddBookmark);\n  galleryView.addHandlerAddBookmark(controlAddBookmark);\n  // model.restoreBookmarks();\n  artistStatementView.addHandlerRender(controlArtistStatement);\n};\ninit();\n\n// Update DOM version\n// const controlArtworks = async function () {\n//   try {\n//     // Disable to access artworks with inputting #id\n//     // const id = window.location.hash.slice(1);\n//     // console.log(id);\n\n//     // if (!id) return;\n//     galleryView.renderSpinner();\n\n//     // 0) Update results view to mark selected search results\n//     // galleryView.update(model.getSearchResultsPage());\n//     galleryView.render(model.getSearchResultsPage());\n\n//     // 1) loading Gallery\n//     // await model.loadArtworks();\n//     await model.loadSearchResults(query);\n\n//     // const { artwork } = model.state;\n\n//     // Rendering Gallery\n\n//     paginationView.render(model.state.search);\n\n//     // galleryView.render(model.state.artworks);\n//   } catch (err) {\n//     galleryView.renderError();\n//   }\n// };\n\n///////////////////////////////////////////////////////////\n\n/* eslint-disable */\n// console.log('Hello from index.js 2');\n// import '@babel/polyfill';\n// import 'core-js/stable';\n// import 'regenerator-runtime/runtime';\n// import { login, logout } from './login';\n// import { displayMap } from './mapbox';\n// import { updateSettings } from './updateSettings';\n// import { purchaseArtwork } from './stripe';\n// import { toggleFilter } from './filterOptions';\n// import { toggleGallery } from './toggleGalleryMode';\n// import {\n//   changeThemeToLight,\n//   changeThemeToDark,\n// } from './components/themeLightDark';\n// import {\n//   gridCardsGallery,\n//   horizontalMasonryGallery,\n// } from './components/changeGalleryMode';\n\n// // DOM ELEMENTS\n// const mapBox = document.getElementById('map');\n// const loginForm = document.querySelector('.form--login');\n// const logOutBtn = document.querySelector('.nav__el--logout');\n// const userDataForm = document.querySelector('.form-user-data');\n// const userPasswordForm = document.querySelector('.form-user-password');\n// const themeSwitch = document.getElementById('theme-switch');\n// const purchaseBtn = document.getElementById('purchase-artwork');\n// const filterBtn = document.querySelectorAll('.filter__btn');\n// const gallerySwitch = document.getElementById('gallery--switch');\n// const gallerySection = document.getElementById('section-gallery');\n\n// DELEGATION\n// document.addEventListener('DOMContentLoaded', (e) => {\n//   document.querySelector('.main').style.backgroundColor = 'red';\n// });\n\n// if (mapBox) {\n//   const locations = JSON.parse(mapBox.dataset.locations);\n//   displayMap(locations);\n// }\n\n// if (loginForm)\n//   loginForm.addEventListener('submit', (e) => {\n//     e.preventDefault();\n//     const email = document.getElementById('email').value;\n//     const password = document.getElementById('password').value;\n//     login(email, password);\n//   });\n\n// if (logOutBtn) logOutBtn.addEventListener('click', logout);\n\n// if (userDataForm)\n//   userDataForm.addEventListener('submit', (e) => {\n//     e.preventDefault();\n//     const form = new FormData();\n//     form.append('name', document.getElementById('name').value);\n//     form.append('email', document.getElementById('email').value);\n//     form.append('photo', document.getElementById('photo').files[0]);\n//     // console.log(form);\n\n//     updateSettings(form, 'data');\n//   });\n\n// if (userPasswordForm)\n//   userPasswordForm.addEventListener('submit', async (e) => {\n//     e.preventDefault();\n//     document.querySelector('.btn--save-password').textContent = 'Updating...';\n\n//     const passwordCurrent = document.getElementById('password-current').value;\n//     const password = document.getElementById('password').value;\n//     const passwordConfirm = document.getElementById('password-confirm').value;\n//     await updateSettings(\n//       { passwordCurrent, password, passwordConfirm },\n//       'password'\n//     );\n\n//     document.querySelector('.btn--save-password').textContent = 'Save password';\n//     document.getElementById('password-current').value = '';\n//     document.getElementById('password').value = '';\n//     document.getElementById('password-confirm').value = '';\n//   });\n\n// if (purchaseBtn)\n//   purchaseBtn.addEventListener('click', (e) => {\n//     e.target.textContent = 'Processing...';\n//     const { artworkId } = e.target.dataset;\n//     purchaseArtwork(artworkId);\n//   });\n\n// Light / Dark theme V.1\n// let theme = localStorage.getItem('data-theme');\n// if (theme === 'dark') {\n//   changeThemeToDark();\n// }\n\n// themeSwitch.addEventListener('change', () => {\n//   let theme = localStorage.getItem('data-theme');\n\n//   if (theme === 'dark') {\n//     changeThemeToLight();\n//     console.log('light theme');\n//   } else {\n//     changeThemeToDark();\n//     console.log('dark theme');\n//   }\n// });\n\n// // Gallery Mode\n// gallerySection.setAttribute('data-gallery', 'grid-cards-gallery');\n// let gallery = localStorage.getItem('data-gallery');\n// if (gallery === 'horizontal-masonry-gallery') {\n//   horizontalMasonryGallery();\n// }\n// gallerySwitch.addEventListener('click', () => {\n//   let gallery = localStorage.getItem('data-gallery');\n\n//   if (gallery === 'horizontal-masonry-gallery') {\n//     gridCardsGallery();\n//     gridCardsGalleryView.render(model.getSearchResultsPage());\n//     console.log('grid-cards-gallery');\n//   } else {\n//     horizontalMasonryGallery();\n//     console.log('horizontal-masonry-gallery');\n//   }\n// });\n\n// gallerySection.setAttribute('data-gallery', 'grid-cards-gallery');\n\n// if (gallerySwitch) gallerySwitch.addEventListener('click', toggleGallery);\n\n// if (gallerySwitch)\n//   gallerySwitch.addEventListener('click', e => {\n//     document.getElementById('gallery-container');\n//     // const parent = document.getElementById('grid-container');\n//     // parent.classList.add('horizontal-gallery');\n//     // if(e.target.classList('gallery-cards'))\n//     // e.target.classList.add('gallery-\n//     toggleGallery;\n//   });\n\n///////////////////////////////////\n// Filter Options\n// if (filterBtn)\n//   for (var i = 0; i < filterBtn.length; i++) {\n//     filterBtn[i].addEventListener('click', (e) => {\n//       e.target.classList.toggle('filter-box__btn--active');\n//       const { docTag } = e.target.dataset;\n//       // console.log(docTag);\n//       toggleFilter(docTag);\n//     });\n//   }\n\n// // e.target.textContent = 'clicked';\n// // const { artworkField } = e.target.dataset;\n// // toggleFilter;\n\n// ////////////////////////////////\n// // DRAGGABLE HANDLER\n\n// var xHandler = document.querySelector('.X-handler');\n// var xWrapper = xHandler.closest('.X-wrapper');\n// var boxA = xWrapper.querySelector('.box-A');\n// // var boxC = xWrapper.querySelector('.boxC');\n// var isHandlerDragging = false;\n\n// document.addEventListener('mousedown', function (e) {\n//   // If mousedown event is fired from .handler, toggle flag to true\n//   if (e.target === xHandler) {\n//     isHandlerDragging = true;\n//   }\n// });\n\n// document.addEventListener('mousemove', function (e) {\n//   // Don't do anything if dragging flag is false\n//   if (!isHandlerDragging) {\n//     return false;\n//   }\n\n//   // Get offset\n//   var containerOffsetLeft = xWrapper.offsetLeft;\n\n//   // Get x-coordinate of pointer relative to container\n//   var pointerRelativeXpos = e.clientX - containerOffsetLeft;\n\n//   // Arbitrary minimum width set on box A, otherwise its inner content will collapse to width of 0\n//   var boxAminWidth = 350;\n\n//   // Resize box A\n//   // * 8px is the left/right spacing between .handler and its inner pseudo-element\n//   // * Set flex-grow to 0 to prevent it from growing\n//   boxA.style.width = Math.max(boxAminWidth, pointerRelativeXpos - 8) + 'px';\n//   boxA.style.flexGrow = 0;\n// });\n\n// document.addEventListener('mouseup', function (e) {\n//   // Turn off dragging flag when user mouse is up\n//   isHandlerDragging = false;\n// });\n\n// ////////////////////////////////\n// // DRAGGABLE HANDLER Y-direction\n// var yHandler = document.querySelector('.Y-handler');\n// var yWrapper = yHandler.closest('.Y-wrapper');\n// var boxC = yWrapper.querySelector('.box-C');\n\n// document.addEventListener('mousedown', function (e) {\n//   // If mousedown event is fired from .handler, toggle flag to true\n//   if (e.target === yHandler) {\n//     isHandlerDragging = true;\n//   }\n// });\n\n// document.addEventListener('mousemove', function (e) {\n//   // Don't do anything if dragging flag is false\n//   if (!isHandlerDragging) {\n//     return false;\n//   }\n\n//   // Get offset\n//   var containerOffsetTop = yWrapper.offsetTop;\n\n//   // Get x-coordinate of pointer relative to container\n//   var pointerRelativeYpos = e.clientY - containerOffsetTop;\n\n//   /*\n//     // Get offset\n//   // element.offsetBottom = element.offsetTop + element.offsetHeight\n\n//   // var bottomY = element.offsetParent.offsetHeight - element.offsetTop - element.offsetHeight;\n\n//   yWrapper.offsetBottom = yWrapper.offsetTop + yWrapper.offsetHeight;\n\n//   var containerOffsetBottom = yWrapper.offsetBottom;\n\n//   // Get x-coordinate of pointer relative to container\n//   var pointerRelativeYpos = e.clientY - containerOffsetBottom;\n// */\n\n//   // Arbitrary minimum height set on box C, otherwise its inner content will collapse to height of 0\n//   var boxCminHeight = 0;\n\n//   // Resize box A\n//   // * 8px is the Top/right spacing between .handler and its inner pseudo-element\n//   // * Set flex-grow to 0 to prevent it from growing\n//   boxC.style.height = Math.max(boxCminHeight, pointerRelativeYpos - 8) + 'px';\n//   boxC.style.flexGrow = 0;\n// });\n\n// document.addEventListener('mouseup', function (e) {\n//   // Turn off dragging flag when user mouse is up\n//   isHandlerDragging = false;\n// });\n/////////////////////////////////\n// LIGHTBOX\n/*\n// Why can't this be achieved with CSS alone?\n// 1. on click of gallery img open large gallery img.\n// 2. on click of another gallery img close current large gallery img and open large version of currently clicked gallery img.\n// I currently have 3 or 4 loops which seems inelegant and probably incorrect.\n\nvar slideIndex = 1;\nshowSlide(slideIndex);\n\nconst preview = document.querySelector('.preview');\nconst pointer = document.querySelector('.pointer');\nconst previous = document.querySelector('.previous');\nconst next = document.querySelector('.next');\n// const modalPreview = document.getElementsByClassName('modal-preview');\n\n// document.addEventListener()\n// document.onkeydown = function(e) {\n//   switch (e.key) {\n//     case 37:\n//       alert('left');\n//       changeSlide(-1);\n//       break;\n//     case 38:\n//       alert('up');\n//       // openDarkScreen();\n//       break;\n//     case 39:\n//       alert('right');\n//       changeSlide(1);\n//       break;\n//     case 40:\n//       alert('down');\n//       closeDarkScreen();\n//       break;\n//   }\n// };\n\npointer.addEventListener('click', closeLightbox());\nprevious.addEventListener('click', changeSlide(1));\n// previous.addEventListener('onkeydown', changeSlide(1));\n\nnext.addEventListener('click', changeSlide(-1));\npreview.addEventListener('click', () => {\n  openLightbox();\n  toSlide();\n  console.log('Hello from \"Preview\"');\n});\n// modalPreview.addEventListener('click', function(e) {\n//   toSlide();\n// });\n\nfunction openLightbox() {\n  document.getElementById('Lightbox').style.display = 'block';\n}\n\nfunction closeLightbox() {\n  document.getElementById('Lightbox').style.display = 'none';\n}\n\nfunction changeSlide(n) {\n  showSlide((slideIndex += n));\n}\n\nfunction toSlide(n) {\n  showSlide((slideIndex = n));\n}\n\nfunction showSlide(n) {\n  const slides = document.querySelector('.slide');\n  let modalPreviews = document.querySelector('.modal-preview');\n\n  if (n > slides.length) {\n    slideIndex = 1;\n  }\n\n  if (n < 1) {\n    slideIndex = slides.length;\n  }\n\n  for (let i = 0; i < slides.length; i++) {\n    slides[i].style.display = 'none';\n  }\n  for (let i = 0; i < modalPreviews.length; i++) {\n    modalPreviews[i].className = modalPreviews[i].className.replace(\n      ' active',\n      ''\n    );\n  }\n\n  slides[slideIndex - 1].style.display = 'block';\n  modalPreviews[slideIndex - 1].className += ' active';\n}\n///////////////////////////////////\n// Modal Popup\ndocument.querySelector(document).ready(function() {\n  document.querySelector('[data-modal-toggle=\"popover\"]').popover({\n    placement: 'top',\n    trigger: 'hover'\n  });\n});\n*/\n// var userImgEl = document.querySelector('.form__user-photo');\n// const userImgInputEl = document.querySelector('#photo');\n\n// const handleDisplayUserPhoto = e => {\n//   const imgFile = e.target.files?.[0];\n\n//   if (!imgFile?.type.startsWith('image/')) return;\n//   const reader = new FileReader();\n\n//   reader.addEventListener('load', () => {\n//     userImgEl.setAttribute('src', reader.result);\n//   });\n\n//   reader.readAsDataURL(imgFile);\n// };\n\n// userImgInputEl.addEventListener('change', handleDisplayUserPhoto);\n\n///////////////////////////////////\n// const mainURL = '/api/v1/gallery';\n// const masonryImg = document.querySelector('.horizontal-gallery-img');\n// const div = document.createElement('div');\n// div.innerHTML = `Hello from index.js`;\n\n// window.addEventListener('DOMContentLoaded', (e) => {\n//   console.log('DOM ready');\n//   fetch(mainURL)\n//     .then((res) => {\n//       return res.json();\n//     })\n//     .then((json) => {\n//       console.log(json);\n//     });\n// });\n// div.style.display = 'none';\n// masonryImg.addEventListener('click', e => {\n//   adder();\n// });\n\n// function adder() {\n//   masonryImg.append(div);\n// }\n\n////////////////////////////////\n//LightDarkModeV.1\n// let theme = localStorage.getItem('data-theme');\n// if (theme === 'dark') {\n//   changeThemeToDark();\n// }\n\n// themeSwitch.addEventListener('change', async () => {\n//   let theme = await localStorage.getItem('data-theme');\n\n//   if (theme === 'dark') {\n//     changeThemeToLight();\n//     console.log('light theme');\n//   } else {\n//     changeThemeToDark();\n//     console.log('dark theme');\n//   }\n// });\n////////////////////////////////\n//LightDarkModeV.2\n// const toggleSwitch = document.querySelector(\n//   '.theme-switch input[type=\"checkbox\"]'\n// );\n// const currentTheme = localStorage.getItem('theme');\n\n// if (currentTheme) {\n//   document.documentElement.setAttribute('data-theme', currentTheme);\n\n//   if (currentTheme === 'dark') {\n//     toggleSwitch.checked = true;\n//   }\n// }\n\n// function switchTheme(e) {\n//   if (e.target.checked) {\n//     document.documentElement.setAttribute('data-theme', 'dark');\n//     localStorage.setItem('theme', 'dark');\n//     console.log('theme=dark');\n//   } else {\n//     document.documentElement.setAttribute('data-theme', 'light');\n//     localStorage.setItem('theme', 'light');\n//     console.log('theme=light');\n//   }\n// }\n\n// export const addHandlerToggleSwitch = async function () {\n//   toggleSwitch.addEventListener('change', switchTheme, false);\n// };\n\n// // _parentElement = docment\n// const toggleSwitch = document.querySelector(\n//   '.theme-switch input[type=\"checkbox\"]'\n// );\n// const parentElement = document.querySelector('.theme-switch-wrapper');\n\n// function switchTheme(e) {\n//   if (e.target.checked) {\n//     document.documentElement.setAttribute('data-theme', 'dark');\n//     localStorage.setItem('theme', 'dark');\n//   } else {\n//     document.documentElement.setAttribute('data-theme', 'light');\n//     localStorage.setItem('theme', 'light');\n//   }\n// }\n\n// toggleSwitch.addEventListener('change', switchTheme, false);\n\n// const currentTheme = localStorage.getItem('theme')\n//   ? localStorage.getItem('theme')\n//   : null;\n\n// if (currentTheme) {\n//   document.documentElement.setAttribute('data-theme', currentTheme);\n\n//   if (currentTheme === 'dark') {\n//     toggleSwitch.checked = true;\n//   }\n// }\n\n///////////////////////////////////34234234234\n// import * as model from './model.js';\n// import galleryView from './views/galleryView.js';\n// import gridCardsGalleryView from './views/gridCardsGalleryView.js';\n// import horizontalMasonryGalleryView from './views/horizontalMasonryGalleryView.js';\n// import searchView from './views/searchView.js';\n// import resultsView from './views/resultsView.js';\n// import paginationView from './views/paginationView.js';\n// import asideModalView from './views/asideModalView.js';\n// import controlPanelView from './views/controlPanelView.js';\n// import settingsModalView from './views/settingsModalView.js';\n// import filtersView from './views/filtersView';\n// import bookmarksView from './views/bookmarksView.js';\n// // import { addHandlerToggleSwitch } from './components/lightDarkMode2';\n\n// ////\n// import {\n//   changeThemeToLight,\n//   changeThemeToDark,\n// } from './components/themeLightDark';\n// import {\n//   gridCardsGallery,\n//   horizontalMasonryGallery,\n// } from './components/changeGalleryMode';\n// import cardsHoverModalView from './views/cardsHoverModalView.js';\n\n// // DOM ELEMENTS\n// const mapBox = document.getElementById('map');\n// const loginForm = document.querySelector('.form--login');\n// const logOutBtn = document.querySelector('.nav__el--logout');\n// const userDataForm = document.querySelector('.form-user-data');\n// const userPasswordForm = document.querySelector('.form-user-password');\n// const themeSwitch = document.getElementById('theme-switch');\n// const purchaseBtn = document.getElementById('purchase-artwork');\n// const filterBtn = document.querySelectorAll('.filter__btn');\n// // const gallerySwitch = document.getElementById('gallery--switch');\n// // const gallerySection = document.getElementById('section-gallery');\n// // import addHandlerToggleSwitch from './lightDarkMode.js';\n\n// // if (module.hot) {\n// //   module.hot.accept();\n// // }\n\n// console.log('Welcome to the client side!');\n\n// const controlGallery = async function (mode) {\n//   try {\n//     // Disable to access artworks with inputting #id\n//     // const id = window.location.hash.slice(1);\n//     // console.log(id);\n\n//     // if (!id) return;\n//     galleryView.renderSpinner();\n//     galleryView.initGalleryMode(model.state.galleryMode);\n\n//     // 0) Update results view to mark selected search results\n//     // galleryView.update(model.getSearchResultsPage());\n\n//     // 1) loading Gallery\n//     // await model.loadArtworks();\n//     await model.loadSearchResults();\n\n//     // const { artwork } = model.state;\n\n//     // Rendering Gallery\n\n//     galleryView.render(model.getSearchResultsPage());\n//     // galleryView.addHandlerClick(model.updateGalleryMode(mode));\n//     // model.updateGalleryMode(mode);\n\n//     // galleryView.render(model.state.artworks);\n//     // galleryView.render(model.state.artworks);\n//   } catch (err) {\n//     galleryView.renderError();\n//   }\n// };\n\n// const controlSearchResults = async function () {\n//   try {\n//     resultsView.renderSpinner();\n//     // console.log(resultsView);\n//     // 1) Get search query\n//     const query = searchView.getQuery();\n//     // if (!query) return;\n\n//     // 2) load search results\n//     // await model.loadSearchResults();\n//     await model.loadSearchResults(query);\n\n//     // Gallery Mode\n//     // gallerySection.setAttribute('data-gallery', 'grid-cards-gallery');\n//     // let gallery = localStorage.getItem('data-gallery');\n//     // if (gallery === 'horizontal-masonry-gallery') {\n//     //   horizontalMasonryGallery();\n//     // }\n//     // gallerySwitch.addEventListener('click', () => {\n//     //   let gallery = localStorage.getItem('data-gallery');\n\n//     //   if (gallery === 'horizontal-masonry-gallery') {\n//     //     gridCardsGallery();\n//     //     gridCardsGalleryView.render(model.getSearchResultsPage());\n//     //     console.log('grid-cards-gallery');\n//     //   } else {\n//     //     horizontalMasonryGallery();\n//     //     horizontalMasonryGalleryView.render(model.getSearchResultsPage());\n//     //     console.log('horizontal-masonry-gallery');\n//     //   }\n//     // });\n\n//     // 3) Render results\n//     // console.log(model.state.search.results);\n//     // resultsView.render(model.state.search.results);\n//     // resultsView.render(model.getSearchResultsPage());\n//     galleryView.render(model.getSearchResultsPage());\n//     // controlPanelView.render(model.getSearchResultsPage);\n//     // controlPanelView.render(model.getSearchResultsPage());\n//     // galleryView.render()\n//     //\n//     // 4) Render initial pagination buttons\n//     paginationView.render(model.state.search);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// const controlPagination = function (goToPage) {\n//   // 1) Render NEW results\n//   // resultsView.render(model.getSearchResultsPage(goToPage));\n//   galleryView.update(model.getSearchResultsPage(goToPage));\n//   // gridCardsGalleryView.render(model.getSearchResultsPage(goToPage));\n//   // horizontalMasonryGalleryView.render(model.getSearchResultsPage(goToPage));\n\n//   // 2) Render NEW pagination buttons\n//   paginationView.update(model.state.search);\n// };\n\n// const controlAsideModal = async function () {\n//   try {\n//     const id = window.location.hash.slice(1);\n//     console.log(id);\n\n//     if (!id) return;\n//     asideModalView.renderSpinner();\n\n//     await model.loadArtwork(id);\n//     // await model.loadArtworks();\n\n//     // asideView.render(model.state.artworks);\n//     asideModalView.render(model.state.artwork);\n//     asideModalView.modalZoom();\n//     // asideModalView.update(model.state.artwork);\n//   } catch (err) {\n//     asideModalView.renderError();\n//   }\n// };\n\n// const controlAddBookmark = function () {\n//   // 1) Add or remove bookmark\n//   if (\n//     !model.state.artwork.bookmarked ||\n//     !model.state.search.results.bookmarked\n//   ) {\n//     model.addBookmark(model.state.artwork);\n//     model.addBookmark(model.state.search.results);\n//   } else {\n//     model.deleteBookmark(model.state.artwork.id);\n//     model.deleteBookmark(model.state.search.results.id);\n//   }\n\n//   // 2) Update aside / gallery view\n//   asideModalView.update(model.state.artwork);\n//   // galleryView.update(model.state.search.results);\n//   galleryView.update(model.state.search.results);\n\n//   // 3) Render bookmarks\n//   galleryView.render(model.state.bookmarks);\n//   // bookmarksView.render(model.state.bookmarks);\n// };\n\n// const controlPanel = async function () {\n//   try {\n//     // console.log(model.state.search.filterFields);\n//     // await model.state.search.filterCategories;\n//     // console.log(model.state.search.filterCategories);\n//     // controlPanelView.render(model.loadSearchResults);\n//     // controlPanelView.render(model.getSearchResultsPage);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// /*\n// const controlGalleryMode = async function () {\n//   try {\n//     // Get requested mode query\n//     // Ultimately there will be a choice of more than 2 galleries, probably from an array of 3 or 4 icons represneting different galleries\n//     const queryMode = galleryView.getQueryMode();\n//     if (!queryMode) return;\n\n//     // 2) Load requested mode\n//     await model.getGalleryMode(queryMode);\n\n//     // 3) Render results\n//     galleryView.render();\n\n//     // 1) Get localstored galleryMode -- after calling loadGalleryMode I have access to model.state.galleryMode\n//     model.getGalleryMode();\n//     console.log(model.getGalleryMode);\n//     // 2) Send to view and render\n//     toggleGallery(console.log(model.state.galleryMode));\n\n//     galleryView.render(getGalleryMode());\n\n//     // 3) If user clicks change mode\n\n//     // 4) Set localstored galleryMode\n\n//     ///////////////\n//     // 1)\n//     // await model.getStoredGalleryMode();\n//     // galleryView.render(model.toggleGalleryMode(switchGallery));\n//     // DON'T ACTUALLY WANT TO PUT MARKUP IN THE GETGALLERYMODE FUNCTION, OR DO YOU? I WANT TO RENDER A DIFFERENT MARKUP DEPENDEING ON RESULTS OF SWITCH, SO GALLERYMODE CONTROLLER NEEDS TO GO BEFORE GALLERYVIEW.RENDER()\n//     // model.getGalleryMode(galleryMode);\n//     // console.log(galleryMode);\n//     // galleryView.render(model.getGalleryMode(galleryMode));\n//     // galleryView.toggleGallery(model.state.galleryMode);\n//     // galleryView.render(model.getGalleryMode());\n//     // 2)\n//     // 3)\n//   } catch (err) {\n//     galleryView.renderError();\n//   }\n// };\n// // */\n\n// const controlSettingsModal = async function () {\n//   settingsModalView.render();\n// };\n// // const controlZoom = function () {\n// //   asideModalView.addHandlerZoom();\n// // };\n// // const controlPanel = async function () {\n// //   try {\n// //     await model.loadArtworks();\n// //   } catch (err) {\n// //     controlPanelView.renderError();\n// //   }\n// // };\n\n// const controlThemeSwitch = async function (theme) {\n//   try {\n//     // 1) themeInit() is called in modal\n//     // 2) if no theme in storage updateTheme\n//     model.setTheme(theme);\n//     settingsModalView.setTheme(model.state.theme);\n//     // console.log(model.state.theme);\n//     // settingsModalView.switchTheme();\n//     // settingsModalView.switchTheme();\n//     // settingsModalView.render(model.state.theme);\n//     // settingsModalView.render(model.state.theme);\n//     // settingsModalView.switchTheme(model.state.theme);\n//     // settingsModalView.switchTheme();\n//     // await model.switchTheme(state.theme);\n//   } catch (err) {\n//     // galleryView.renderError();\n//     console.log(err);\n//   }\n// };\n\n// const controlUpdateGalleryMode = async function (mode) {\n//   try {\n//     // 1) galleryModeInit() is called in model\n//     model.updateGalleryMode(mode);\n//     galleryView.renderSpinner();\n//     galleryView.setGalleryMode(model.state.galleryMode);\n//     await model.loadSearchResults();\n//     galleryView.render(model.state.search.results);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// const controlInitGalleryMode = function (mode) {\n//   galleryView.setGalleryMode(model.state.galleryMode);\n//   // console.log(model.state.galleryMode);\n//   // galleryView.render(model.getSearchResultsPage);\n// };\n\n// const controlFilters = async function (filters) {\n//   try {\n//     await model.loadFilterCategories();\n//     filtersView.render(model.state.search.filterFields);\n//     // console.log(model.state.search.filterFields, '😂');\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// // const controlAddBookmarkGallery = function () {\n// //   model.addBookmark(model.state.artwork);\n// //   console.log(model.state.artwork);\n// //   galleryView.update(model.state.artwork);\n// // };\n\n// const init = function () {\n//   // galleryView.addHandlerRender(controlGallery);\n//   // galleryView.addHandlerRender(controlSearchResults);\n//   asideModalView.addHandlerAddBookmark(controlAddBookmark);\n//   paginationView.addHandlerClick(controlPagination);\n//   asideModalView.addHandlerRender(controlAsideModal);\n//   // settingsModalView.addHandlerThemeSwitch(controlThemeSwitch);\n//   // settingsModalView.addHandlerRender(controlThemeSwitch);\n//   galleryView.addHandlerClick(controlPanel);\n//   galleryView.addHandlerClick(controlUpdateGalleryMode);\n//   galleryView.addHandlerAddBookmark(controlAddBookmark);\n//   // galleryView.addHandlerRender(controlInitGalleryMode);\n//   controlPanelView.addHandlerRender(controlPanel);\n//   filtersView.addHandlerRender(controlFilters);\n\n//   // settingsModalView.addHandlerThemeSwitch();\n//   // addHandlerToggleSwitch();\n//   // galleryView.addHandlerRender(controlArtworks);\n//   // galleryView.addHandlerToggleGallery();\n//   // galleryView.addHandlerToggle(controlSearchResults);\n//   // searchView.addHandlerSearch(controlSearchResults);\n//   // galleryView.addHandlerClick(controlGalleryMode); // addHanlderSwitch does not need to be placed first in execution order because galleryMode should be set or init(ialised) by model on page load first anyway.\n\n//   // DON'T ACTUALLY NEED TO INIT THIS, CAN SIMPLY IMPORT\n//   // settingsModalView.addHandlerRender(controlSettingsModal);\n//   // settingsModalView.render();\n// };\n// init();\n\n// // Update DOM version\n// // const controlArtworks = async function () {\n// //   try {\n// //     // Disable to access artworks with inputting #id\n// //     // const id = window.location.hash.slice(1);\n// //     // console.log(id);\n\n// //     // if (!id) return;\n// //     galleryView.renderSpinner();\n\n// //     // 0) Update results view to mark selected search results\n// //     // galleryView.update(model.getSearchResultsPage());\n// //     galleryView.render(model.getSearchResultsPage());\n\n// //     // 1) loading Gallery\n// //     // await model.loadArtworks();\n// //     await model.loadSearchResults(query);\n\n// //     // const { artwork } = model.state;\n\n// //     // Rendering Gallery\n\n// //     paginationView.render(model.state.search);\n\n// //     // galleryView.render(model.state.artworks);\n// //   } catch (err) {\n// //     galleryView.renderError();\n// //   }\n// // };\n\n// ///////////////////////////////////////////////////////////\n\n// /* eslint-disable */\n// console.log('Hello from index.js 2');\n// // import '@babel/polyfill';\n// // import 'core-js/stable';\n// // import 'regenerator-runtime/runtime';\n// // import { login, logout } from './login';\n// // import { displayMap } from './mapbox';\n// // import { updateSettings } from './updateSettings';\n// // import { purchaseArtwork } from './stripe';\n// // import { toggleFilter } from './filterOptions';\n// // import { toggleGallery } from './toggleGalleryMode';\n// // import {\n// //   changeThemeToLight,\n// //   changeThemeToDark,\n// // } from './components/themeLightDark';\n// // import {\n// //   gridCardsGallery,\n// //   horizontalMasonryGallery,\n// // } from './components/changeGalleryMode';\n\n// // // DOM ELEMENTS\n// // const mapBox = document.getElementById('map');\n// // const loginForm = document.querySelector('.form--login');\n// // const logOutBtn = document.querySelector('.nav__el--logout');\n// // const userDataForm = document.querySelector('.form-user-data');\n// // const userPasswordForm = document.querySelector('.form-user-password');\n// // const themeSwitch = document.getElementById('theme-switch');\n// // const purchaseBtn = document.getElementById('purchase-artwork');\n// // const filterBtn = document.querySelectorAll('.filter__btn');\n// // const gallerySwitch = document.getElementById('gallery--switch');\n// // const gallerySection = document.getElementById('section-gallery');\n\n// // DELEGATION\n// // document.addEventListener('DOMContentLoaded', (e) => {\n// //   document.querySelector('.main').style.backgroundColor = 'red';\n// // });\n\n// if (mapBox) {\n//   const locations = JSON.parse(mapBox.dataset.locations);\n//   displayMap(locations);\n// }\n\n// if (loginForm)\n//   loginForm.addEventListener('submit', (e) => {\n//     e.preventDefault();\n//     const email = document.getElementById('email').value;\n//     const password = document.getElementById('password').value;\n//     login(email, password);\n//   });\n\n// if (logOutBtn) logOutBtn.addEventListener('click', logout);\n\n// if (userDataForm)\n//   userDataForm.addEventListener('submit', (e) => {\n//     e.preventDefault();\n//     const form = new FormData();\n//     form.append('name', document.getElementById('name').value);\n//     form.append('email', document.getElementById('email').value);\n//     form.append('photo', document.getElementById('photo').files[0]);\n//     // console.log(form);\n\n//     updateSettings(form, 'data');\n//   });\n\n// if (userPasswordForm)\n//   userPasswordForm.addEventListener('submit', async (e) => {\n//     e.preventDefault();\n//     document.querySelector('.btn--save-password').textContent = 'Updating...';\n\n//     const passwordCurrent = document.getElementById('password-current').value;\n//     const password = document.getElementById('password').value;\n//     const passwordConfirm = document.getElementById('password-confirm').value;\n//     await updateSettings(\n//       { passwordCurrent, password, passwordConfirm },\n//       'password'\n//     );\n\n//     document.querySelector('.btn--save-password').textContent = 'Save password';\n//     document.getElementById('password-current').value = '';\n//     document.getElementById('password').value = '';\n//     document.getElementById('password-confirm').value = '';\n//   });\n\n// if (purchaseBtn)\n//   purchaseBtn.addEventListener('click', (e) => {\n//     e.target.textContent = 'Processing...';\n//     const { artworkId } = e.target.dataset;\n//     purchaseArtwork(artworkId);\n//   });\n\n// // Light / Dark theme V.1\n// // let theme = localStorage.getItem('data-theme');\n// // if (theme === 'dark') {\n// //   changeThemeToDark();\n// // }\n\n// // themeSwitch.addEventListener('change', () => {\n// //   let theme = localStorage.getItem('data-theme');\n\n// //   if (theme === 'dark') {\n// //     changeThemeToLight();\n// //     console.log('light theme');\n// //   } else {\n// //     changeThemeToDark();\n// //     console.log('dark theme');\n// //   }\n// // });\n\n// // // Gallery Mode\n// // gallerySection.setAttribute('data-gallery', 'grid-cards-gallery');\n// // let gallery = localStorage.getItem('data-gallery');\n// // if (gallery === 'horizontal-masonry-gallery') {\n// //   horizontalMasonryGallery();\n// // }\n// // gallerySwitch.addEventListener('click', () => {\n// //   let gallery = localStorage.getItem('data-gallery');\n\n// //   if (gallery === 'horizontal-masonry-gallery') {\n// //     gridCardsGallery();\n// //     gridCardsGalleryView.render(model.getSearchResultsPage());\n// //     console.log('grid-cards-gallery');\n// //   } else {\n// //     horizontalMasonryGallery();\n// //     console.log('horizontal-masonry-gallery');\n// //   }\n// // });\n\n// // gallerySection.setAttribute('data-gallery', 'grid-cards-gallery');\n\n// // if (gallerySwitch) gallerySwitch.addEventListener('click', toggleGallery);\n\n// // if (gallerySwitch)\n// //   gallerySwitch.addEventListener('click', e => {\n// //     document.getElementById('gallery-container');\n// //     // const parent = document.getElementById('grid-container');\n// //     // parent.classList.add('horizontal-gallery');\n// //     // if(e.target.classList('gallery-cards'))\n// //     // e.target.classList.add('gallery-\n// //     toggleGallery;\n// //   });\n\n// ///////////////////////////////////\n// // Filter Options\n// if (filterBtn)\n//   for (var i = 0; i < filterBtn.length; i++) {\n//     filterBtn[i].addEventListener('click', (e) => {\n//       e.target.classList.toggle('filter-box__btn--active');\n//       const { docTag } = e.target.dataset;\n//       // console.log(docTag);\n//       toggleFilter(docTag);\n//     });\n//   }\n\n// // e.target.textContent = 'clicked';\n// // const { artworkField } = e.target.dataset;\n// // toggleFilter;\n\n// ////////////////////////////////\n// // DRAGGABLE HANDLER\n\n// var xHandler = document.querySelector('.X-handler');\n// var xWrapper = xHandler.closest('.X-wrapper');\n// var boxA = xWrapper.querySelector('.box-A');\n// // var boxC = xWrapper.querySelector('.boxC');\n// var isHandlerDragging = false;\n\n// document.addEventListener('mousedown', function (e) {\n//   // If mousedown event is fired from .handler, toggle flag to true\n//   if (e.target === xHandler) {\n//     isHandlerDragging = true;\n//   }\n// });\n\n// document.addEventListener('mousemove', function (e) {\n//   // Don't do anything if dragging flag is false\n//   if (!isHandlerDragging) {\n//     return false;\n//   }\n\n//   // Get offset\n//   var containerOffsetLeft = xWrapper.offsetLeft;\n\n//   // Get x-coordinate of pointer relative to container\n//   var pointerRelativeXpos = e.clientX - containerOffsetLeft;\n\n//   // Arbitrary minimum width set on box A, otherwise its inner content will collapse to width of 0\n//   var boxAminWidth = 350;\n\n//   // Resize box A\n//   // * 8px is the left/right spacing between .handler and its inner pseudo-element\n//   // * Set flex-grow to 0 to prevent it from growing\n//   boxA.style.width = Math.max(boxAminWidth, pointerRelativeXpos - 8) + 'px';\n//   boxA.style.flexGrow = 0;\n// });\n\n// document.addEventListener('mouseup', function (e) {\n//   // Turn off dragging flag when user mouse is up\n//   isHandlerDragging = false;\n// });\n\n// ////////////////////////////////\n// // DRAGGABLE HANDLER Y-direction\n// var yHandler = document.querySelector('.Y-handler');\n// var yWrapper = yHandler.closest('.Y-wrapper');\n// var boxC = yWrapper.querySelector('.box-C');\n\n// document.addEventListener('mousedown', function (e) {\n//   // If mousedown event is fired from .handler, toggle flag to true\n//   if (e.target === yHandler) {\n//     isHandlerDragging = true;\n//   }\n// });\n\n// document.addEventListener('mousemove', function (e) {\n//   // Don't do anything if dragging flag is false\n//   if (!isHandlerDragging) {\n//     return false;\n//   }\n\n//   // Get offset\n//   var containerOffsetTop = yWrapper.offsetTop;\n\n//   // Get x-coordinate of pointer relative to container\n//   var pointerRelativeYpos = e.clientY - containerOffsetTop;\n\n//   /*\n//     // Get offset\n//   // element.offsetBottom = element.offsetTop + element.offsetHeight\n\n//   // var bottomY = element.offsetParent.offsetHeight - element.offsetTop - element.offsetHeight;\n\n//   yWrapper.offsetBottom = yWrapper.offsetTop + yWrapper.offsetHeight;\n\n//   var containerOffsetBottom = yWrapper.offsetBottom;\n\n//   // Get x-coordinate of pointer relative to container\n//   var pointerRelativeYpos = e.clientY - containerOffsetBottom;\n// */\n\n//   // Arbitrary minimum height set on box C, otherwise its inner content will collapse to height of 0\n//   var boxCminHeight = 0;\n\n//   // Resize box A\n//   // * 8px is the Top/right spacing between .handler and its inner pseudo-element\n//   // * Set flex-grow to 0 to prevent it from growing\n//   boxC.style.height = Math.max(boxCminHeight, pointerRelativeYpos - 8) + 'px';\n//   boxC.style.flexGrow = 0;\n// });\n\n// document.addEventListener('mouseup', function (e) {\n//   // Turn off dragging flag when user mouse is up\n//   isHandlerDragging = false;\n// });\n// /////////////////////////////////\n// // LIGHTBOX\n// /*\n// // Why can't this be achieved with CSS alone?\n// // 1. on click of gallery img open large gallery img.\n// // 2. on click of another gallery img close current large gallery img and open large version of currently clicked gallery img.\n// // I currently have 3 or 4 loops which seems inelegant and probably incorrect.\n\n// var slideIndex = 1;\n// showSlide(slideIndex);\n\n// const preview = document.querySelector('.preview');\n// const pointer = document.querySelector('.pointer');\n// const previous = document.querySelector('.previous');\n// const next = document.querySelector('.next');\n// // const modalPreview = document.getElementsByClassName('modal-preview');\n\n// // document.addEventListener()\n// // document.onkeydown = function(e) {\n// //   switch (e.key) {\n// //     case 37:\n// //       alert('left');\n// //       changeSlide(-1);\n// //       break;\n// //     case 38:\n// //       alert('up');\n// //       // openDarkScreen();\n// //       break;\n// //     case 39:\n// //       alert('right');\n// //       changeSlide(1);\n// //       break;\n// //     case 40:\n// //       alert('down');\n// //       closeDarkScreen();\n// //       break;\n// //   }\n// // };\n\n// pointer.addEventListener('click', closeLightbox());\n// previous.addEventListener('click', changeSlide(1));\n// // previous.addEventListener('onkeydown', changeSlide(1));\n\n// next.addEventListener('click', changeSlide(-1));\n// preview.addEventListener('click', () => {\n//   openLightbox();\n//   toSlide();\n//   console.log('Hello from \"Preview\"');\n// });\n// // modalPreview.addEventListener('click', function(e) {\n// //   toSlide();\n// // });\n\n// function openLightbox() {\n//   document.getElementById('Lightbox').style.display = 'block';\n// }\n\n// function closeLightbox() {\n//   document.getElementById('Lightbox').style.display = 'none';\n// }\n\n// function changeSlide(n) {\n//   showSlide((slideIndex += n));\n// }\n\n// function toSlide(n) {\n//   showSlide((slideIndex = n));\n// }\n\n// function showSlide(n) {\n//   const slides = document.querySelector('.slide');\n//   let modalPreviews = document.querySelector('.modal-preview');\n\n//   if (n > slides.length) {\n//     slideIndex = 1;\n//   }\n\n//   if (n < 1) {\n//     slideIndex = slides.length;\n//   }\n\n//   for (let i = 0; i < slides.length; i++) {\n//     slides[i].style.display = 'none';\n//   }\n//   for (let i = 0; i < modalPreviews.length; i++) {\n//     modalPreviews[i].className = modalPreviews[i].className.replace(\n//       ' active',\n//       ''\n//     );\n//   }\n\n//   slides[slideIndex - 1].style.display = 'block';\n//   modalPreviews[slideIndex - 1].className += ' active';\n// }\n// ///////////////////////////////////\n// // Modal Popup\n// document.querySelector(document).ready(function() {\n//   document.querySelector('[data-modal-toggle=\"popover\"]').popover({\n//     placement: 'top',\n//     trigger: 'hover'\n//   });\n// });\n// */\n// // var userImgEl = document.querySelector('.form__user-photo');\n// // const userImgInputEl = document.querySelector('#photo');\n\n// // const handleDisplayUserPhoto = e => {\n// //   const imgFile = e.target.files?.[0];\n\n// //   if (!imgFile?.type.startsWith('image/')) return;\n// //   const reader = new FileReader();\n\n// //   reader.addEventListener('load', () => {\n// //     userImgEl.setAttribute('src', reader.result);\n// //   });\n\n// //   reader.readAsDataURL(imgFile);\n// // };\n\n// // userImgInputEl.addEventListener('change', handleDisplayUserPhoto);\n\n// ///////////////////////////////////\n// // const mainURL = '/api/v1/gallery';\n// // const masonryImg = document.querySelector('.horizontal-gallery-img');\n// // const div = document.createElement('div');\n// // div.innerHTML = `Hello from index.js`;\n\n// // window.addEventListener('DOMContentLoaded', (e) => {\n// //   console.log('DOM ready');\n// //   fetch(mainURL)\n// //     .then((res) => {\n// //       return res.json();\n// //     })\n// //     .then((json) => {\n// //       console.log(json);\n// //     });\n// // });\n// // div.style.display = 'none';\n// // masonryImg.addEventListener('click', e => {\n// //   adder();\n// // });\n\n// // function adder() {\n// //   masonryImg.append(div);\n// // }\n\n// ////////////////////////////////\n// //LightDarkModeV.1\n// // let theme = localStorage.getItem('data-theme');\n// // if (theme === 'dark') {\n// //   changeThemeToDark();\n// // }\n\n// // themeSwitch.addEventListener('change', async () => {\n// //   let theme = await localStorage.getItem('data-theme');\n\n// //   if (theme === 'dark') {\n// //     changeThemeToLight();\n// //     console.log('light theme');\n// //   } else {\n// //     changeThemeToDark();\n// //     console.log('dark theme');\n// //   }\n// // });\n// ////////////////////////////////\n// //LightDarkModeV.2\n// // const toggleSwitch = document.querySelector(\n// //   '.theme-switch input[type=\"checkbox\"]'\n// // );\n// // const currentTheme = localStorage.getItem('theme');\n\n// // if (currentTheme) {\n// //   document.documentElement.setAttribute('data-theme', currentTheme);\n\n// //   if (currentTheme === 'dark') {\n// //     toggleSwitch.checked = true;\n// //   }\n// // }\n\n// // function switchTheme(e) {\n// //   if (e.target.checked) {\n// //     document.documentElement.setAttribute('data-theme', 'dark');\n// //     localStorage.setItem('theme', 'dark');\n// //     console.log('theme=dark');\n// //   } else {\n// //     document.documentElement.setAttribute('data-theme', 'light');\n// //     localStorage.setItem('theme', 'light');\n// //     console.log('theme=light');\n// //   }\n// // }\n\n// // export const addHandlerToggleSwitch = async function () {\n// //   toggleSwitch.addEventListener('change', switchTheme, false);\n// // };\n\n// // // _parentElement = docment\n// // const toggleSwitch = document.querySelector(\n// //   '.theme-switch input[type=\"checkbox\"]'\n// // );\n// // const parentElement = document.querySelector('.theme-switch-wrapper');\n\n// // function switchTheme(e) {\n// //   if (e.target.checked) {\n// //     document.documentElement.setAttribute('data-theme', 'dark');\n// //     localStorage.setItem('theme', 'dark');\n// //   } else {\n// //     document.documentElement.setAttribute('data-theme', 'light');\n// //     localStorage.setItem('theme', 'light');\n// //   }\n// // }\n\n// // toggleSwitch.addEventListener('change', switchTheme, false);\n\n// // const currentTheme = localStorage.getItem('theme')\n// //   ? localStorage.getItem('theme')\n// //   : null;\n\n// // if (currentTheme) {\n// //   document.documentElement.setAttribute('data-theme', currentTheme);\n\n// //   if (currentTheme === 'dark') {\n// //     toggleSwitch.checked = true;\n// //   }\n// // }\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$ba30e20475feac5a$export$3fe55e387a32c5da","$bd02c871d9c5ba8e$export$d047a7c56db64af4","async","url","res","Promise","race","fetch","s","_","reject","setTimeout","data","json","ok","message","status","err","$0f1d4402dffacf5b$export$ca000e230c0caa3e","artworks","artwork","search","query","results","page","resultsPerPage","filterFields","bookmarks","galleryMode","theme","texts","$0f1d4402dffacf5b$export$f3859bf58881a3a7","map","image","imageCover","title","medium","date","dims","dimensions","height","width","price","sales","priceRange","categories","tags","console","log","error","$0f1d4402dffacf5b$export$8d7f79465139ab72","start","end","slice","$0f1d4402dffacf5b$var$persistBookmarks","localStorage","setItem","stringify","$0f1d4402dffacf5b$export$72009cc673d27d80","push","bookmarked","$0f1d4402dffacf5b$export$136048bcb9946c75","index","findIndex","el","splice","storage","getItem","$0f1d4402dffacf5b$var$init","$0f1d4402dffacf5b$export$8fc1748c43879466","mode","$0f1d4402dffacf5b$var$galleryModeInit","$0f1d4402dffacf5b$var$themeInit","$b8e9824874721d6d$exports","URL","resolve","import","meta","toString","$3a07c34e115c11c9$export$2e2bcd8739ae039","_data","render","Array","isArray","this","renderError","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","update","newMarkup","newDOM","document","createRange","createContextualFragment","newElements","from","querySelectorAll","curElements","forEach","newEl","curEl","isEqualNode","firstChild","nodeValue","trim","textContent","attributes","attr","setAttribute","name","value","innerHTML","renderSpinner","$parcel$interopDefault","_errorMessage","renderMessage","_message","querySelector","_card","constructor","super","openHoverModal","classList","toggle","_modalOnMousePosition","closeHoverModal","_addHandlerHoverCard","addEventListener","position","createElement","card","window","onmousemove","e","contains","x","clientX","y","clientY","tooltipSpan","style","top","left","location","$a64fa7f274cd3480$export$2e2bcd8739ae039","year","Date","toLocaleString","hash","px","$5b9f7aba59b75bef$export$2e2bcd8739ae039","$5d1bb7e064b2cbd1$export$2e2bcd8739ae039","addHandlerRender","handler","$1d5a3f7ba0dd07e0$export$2e2bcd8739ae039","_gallerySection","_horizontalMasonryBtn","_gridCardsBtn","_bookmarksBtn","_btnToggleCardInfo","_addHandlerToggleCardInfo","setGalleryMode","getAttribute","addHandlerClick","dataset","currentMode","remove","add","cards","join","toggleCardInfo","bind","_cardInfo","addHandlerAddBookmark","target","closest","$813cf99795e9ec97$export$2e2bcd8739ae039","getQuery","_clearInput","addHandlerSearch","preventDefault","_generateMarkupPreview","result","description","$cfa940594ee109f7$export$2e2bcd8739ae039","btn","goToPage","goto","curPage","numPages","Math","ceil","prevButton","nextButton","$3de9182c618eb841$export$2e2bcd8739ae039","_btnToggleBoxB","_btnClose","_aside","_sectionGallery","_addHandlerToggleWindow","ev","toggleBoxB","modalZoom","zoomIn","zoomOut","slide","sectionGallery","getElementById","curWidth","clientWidth","sectionWidth","_generateMarkupAsideFigure","_generateMarkupAsideBtns","_generateMarkupAsideFigcaption","$d98fb917caedabb4$export$2e2bcd8739ae039","_controlPanel","_cogBtn","_galleryWindow","_gallerySettings","_filterMenu","_galleryControlPanel","_btnToggleControlPanel","_btnToggleFilterMenu","_addHandlerToggle","toggleCP","toggleGW","toggleFM","_allEls","_overlay","_themeSwitch","_addHandlerOpenModal","_addHandlerCloseModal","_addHandlerThemeSwitch","openModal","closeModal","setTheme","documentElement","checked","changeThemeToDark","changeThemeToLight","switchTheme","_resetTheme","$46e8c842b7c8a630$export$2e2bcd8739ae039","_filtersForm","_clearBtn","_filterSearchBtn","_addHandlerSearchBtn","filterBox","field","arr","set","Set","prepend","h3","h3Wrap","append","insertAdjacentElement","btnsWrap","urlz","getData","_generateMarkupFilterCategories","parentEl","_generateMarkupFilterBtns","_generateMarkupFilterCheckboxes","_sendQueryStringToURL","_sortByAlphabeticalOrder","_sortByChronologicalOrder","_sortByDate","btns","_toggleModal","_addHandlerRender","$574281d6fc05ef2f$export$2e2bcd8739ae039","_link","$f50bd1f2915ed0f2$var$controlGallery","$f50bd1f2915ed0f2$var$controlGalleryMode","$f50bd1f2915ed0f2$var$controlSearchResults","$0f1d4402dffacf5b$export$202b8e5cb363a0c4","$f50bd1f2915ed0f2$var$controlPagination","$f50bd1f2915ed0f2$var$controlAsideModal","some","bookmark","$0f1d4402dffacf5b$export$7db523eef55c382e","$f50bd1f2915ed0f2$var$controlAddBookmark","$f50bd1f2915ed0f2$var$controlBookmarks","$f50bd1f2915ed0f2$var$controlPanel","$f50bd1f2915ed0f2$var$controlFilters","filters","$0f1d4402dffacf5b$export$f2ef7f46ae9ea7d8","$f50bd1f2915ed0f2$var$controlArtistStatement","artistStatement"],"version":3,"file":"index.f72827a2.js.map"}